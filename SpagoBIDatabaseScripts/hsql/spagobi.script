CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE SBI_CHECKS(CHECK_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,VALUE_TYPE_CD VARCHAR,VALUE_TYPE_ID INTEGER,VALUE_1 VARCHAR,VALUE_2 VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_CHECKS PRIMARY KEY(CHECK_ID))
CREATE MEMORY TABLE SBI_DOMAINS(VALUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 200) NOT NULL,VALUE_CD VARCHAR,VALUE_NM VARCHAR,DOMAIN_CD VARCHAR,DOMAIN_NM VARCHAR,VALUE_DS VARCHAR,CONSTRAINT XPKSBI_DOMAINS PRIMARY KEY(VALUE_ID))
CREATE MEMORY TABLE SBI_ENGINES(ENGINE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENCRYPT SMALLINT,NAME VARCHAR,DESCR VARCHAR,MAIN_URL VARCHAR,SECN_URL VARCHAR,OBJ_UPL_DIR VARCHAR,OBJ_USE_DIR VARCHAR,DRIVER_NM VARCHAR,LABEL VARCHAR,ENGINE_TYPE INTEGER,CLASS_NM VARCHAR,BIOBJ_TYPE INTEGER,DEFAULT_DS_ID INTEGER,USE_DATASET BOOLEAN,USE_DATASOURCE BOOLEAN,CONSTRAINT XPKSBI_ENGINES PRIMARY KEY(ENGINE_ID),CONSTRAINT FK_SBI_ENGINES_1 FOREIGN KEY(BIOBJ_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_ENGINES_2 FOREIGN KEY(ENGINE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_EXT_ROLES(EXT_ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR NOT NULL,DESCR VARCHAR,CODE VARCHAR,ROLE_TYPE_CD VARCHAR,ROLE_TYPE_ID INTEGER,SAVE_SUBOBJECTS BOOLEAN DEFAULT true,SEE_SUBOBJECTS BOOLEAN DEFAULT true,SEE_VIEWPOINTS BOOLEAN DEFAULT true,SEE_SNAPSHOTS BOOLEAN DEFAULT true,SEE_NOTES BOOLEAN DEFAULT true,SEND_MAIL BOOLEAN DEFAULT true,SAVE_INTO_FOLDER BOOLEAN DEFAULT true,SAVE_REMEMBER_ME BOOLEAN DEFAULT true,SEE_METADATA BOOLEAN DEFAULT true, SAVE_METADATA BOOLEAN DEFAULT true, BUILD_QBE_QUERY BOOLEAN DEFAULT true,CONSTRAINT XPKSBI_EXT_ROLES PRIMARY KEY(EXT_ROLE_ID),CONSTRAINT FK_SBI_EXT_ROLES_1 FOREIGN KEY(ROLE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE UNIQUE INDEX XHNAME_UNIQUE ON SBI_EXT_ROLES(NAME)
CREATE MEMORY TABLE SBI_FUNC_ROLE(ROLE_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,STATE_CD VARCHAR,STATE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_FUNC_ROLE PRIMARY KEY(FUNCT_ID,STATE_ID,ROLE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_FUNCTIONS(FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCT_TYPE_CD VARCHAR,PARENT_FUNCT_ID INTEGER,NAME VARCHAR,DESCR VARCHAR,PATH VARCHAR,CODE VARCHAR,PROG INTEGER NOT NULL,FUNCT_TYPE_ID INTEGER,CONSTRAINT XPKSBI_FUNCTIONS PRIMARY KEY(FUNCT_ID),CONSTRAINT FK_SBI_FUNCTIONS_1 FOREIGN KEY(FUNCT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNCTIONS_2 FOREIGN KEY(PARENT_FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_LOV(LOV_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,INPUT_TYPE_CD VARCHAR,DEFAULT_VAL VARCHAR,LOV_PROVIDER VARCHAR,INPUT_TYPE_ID INTEGER,PROFILE_ATTR VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_LOV PRIMARY KEY(LOV_ID),CONSTRAINT FK_SBI_LOV_1 FOREIGN KEY(INPUT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJ_FUNC(BIOBJ_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_OBJ_FUNC PRIMARY KEY(BIOBJ_ID,FUNCT_ID),CONSTRAINT FK_SBI_OBJ_FUNC_1 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_OBJ_PAR(PAR_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL,LABEL VARCHAR,REQ_FL SMALLINT,MOD_FL SMALLINT,VIEW_FL SMALLINT,MULT_FL SMALLINT,PROG INTEGER NOT NULL,PARURL_NM VARCHAR,OBJ_PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,PRIORITY INTEGER,CONSTRAINT XPKSBI_OBJ_PAR PRIMARY KEY(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_OBJ_STATE(BIOBJ_ID INTEGER NOT NULL,STATE_ID INTEGER NOT NULL,END_DT DATE,START_DT DATE NOT NULL,NOTE VARCHAR,CONSTRAINT XPKSBI_OBJ_STATE PRIMARY KEY(BIOBJ_ID,STATE_ID,START_DT),CONSTRAINT FK_SBI_OBJ_STATE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJECTS(BIOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENGINE_ID INTEGER,DESCR VARCHAR,LABEL VARCHAR,ENCRYPT SMALLINT,PATH VARCHAR,REL_NAME VARCHAR,STATE_ID INTEGER,STATE_CD VARCHAR,BIOBJ_TYPE_CD VARCHAR,BIOBJ_TYPE_ID INTEGER,SCHED_FL SMALLINT,EXEC_MODE_ID INTEGER,STATE_CONS_ID INTEGER,EXEC_MODE_CD VARCHAR,STATE_CONS_CD VARCHAR,NAME VARCHAR,VISIBLE SMALLINT,UUID VARCHAR,DATA_SOURCE_ID INTEGER,DATA_SET_ID INTEGER,DESCR_EXT VARCHAR,OBJECTIVE VARCHAR,KEYWORDS VARCHAR,LANGUAGE VARCHAR,CREATION_DATE TIMESTAMP,CREATION_USER VARCHAR,REFRESH_SECONDS INTEGER,PROF_VISIBILITY VARCHAR(400),CONSTRAINT XPKSBI_OBJECTS PRIMARY KEY(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECTS_1 FOREIGN KEY(STATE_CONS_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_3 FOREIGN KEY(BIOBJ_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_4 FOREIGN KEY(EXEC_MODE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_5 FOREIGN KEY(ENGINE_ID) REFERENCES SBI_ENGINES(ENGINE_ID))
CREATE MEMORY TABLE SBI_OBJECTS_RATING(USER_ID VARCHAR(127) NOT NULL,OBJ_ID INTEGER NOT NULL,RATING INTEGER NOT NULL,CONSTRAINT XPKSBI_OBJECTS_RATING PRIMARY KEY(USER_ID,OBJ_ID),CONSTRAINT FK_SBI_OBJECTS_RATING_1 FOREIGN KEY(OBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE MEMORY TABLE SBI_PARAMETERS(PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCTIONAL_FLAG SMALLINT DEFAULT 1 NOT NULL,TEMPORAL_FLAG SMALLINT DEFAULT 0 NOT NULL,DESCR VARCHAR,LENGTH SMALLINT,LABEL VARCHAR,PAR_TYPE_CD VARCHAR,MASK VARCHAR,PAR_TYPE_ID INTEGER,NAME VARCHAR,CONSTRAINT XPKSBI_PARAMETERS PRIMARY KEY(PAR_ID),CONSTRAINT FK_SBI_PARAMETERS_1 FOREIGN KEY(PAR_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_PARUSE(USE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,LOV_ID INTEGER,LABEL VARCHAR,DESCR VARCHAR,PAR_ID INTEGER,NAME VARCHAR,MAN_IN INTEGER,SELECTION_TYPE VARCHAR DEFAULT 'LIST',MULTIVALUE_FLAG SMALLINT DEFAULT 0,CONSTRAINT XPKSBI_PARUSE PRIMARY KEY(USE_ID),CONSTRAINT FK_SBI_PARUSE_2 FOREIGN KEY(LOV_ID) REFERENCES SBI_LOV(LOV_ID),CONSTRAINT FK_SBI_PARUSE_1 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID))
CREATE MEMORY TABLE SBI_PARUSE_CK(CHECK_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_PARUSE_CK PRIMARY KEY(USE_ID,CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_2 FOREIGN KEY(CHECK_ID) REFERENCES SBI_CHECKS(CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_PARUSE_DET(EXT_ROLE_ID INTEGER NOT NULL,PROG INTEGER,USE_ID INTEGER NOT NULL,HIDDEN_FL SMALLINT,DEFAULT_VAL VARCHAR,CONSTRAINT XPKSBI_PARUSE_DET PRIMARY KEY(USE_ID,EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_2 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_SUBREPORTS(MASTER_RPT_ID INTEGER NOT NULL,SUB_RPT_ID INTEGER NOT NULL,PRIMARY KEY(MASTER_RPT_ID,SUB_RPT_ID),CONSTRAINT FK_SBI_SUBREPORTS_1 FOREIGN KEY(MASTER_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SUBREPORTS_2 FOREIGN KEY(SUB_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_OBJ_PARUSE(OBJ_PAR_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,OBJ_PAR_FATHER_ID INTEGER NOT NULL,FILTER_OPERATION VARCHAR NOT NULL,PROG INTEGER NOT NULL,FILTER_COLUMN VARCHAR NOT NULL,PRE_CONDITION VARCHAR,POST_CONDITION VARCHAR,LOGIC_OPERATOR VARCHAR,CONSTRAINT XPKSBI_OBJ_PARUSE PRIMARY KEY(OBJ_PAR_ID,USE_ID,OBJ_PAR_FATHER_ID,FILTER_OPERATION),CONSTRAINT FK_SBI_OBJ_PARUSE_1 FOREIGN KEY(OBJ_PAR_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_2 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_3 FOREIGN KEY(OBJ_PAR_FATHER_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,CONSTRAINT XPKSBI_EVENTS PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_LOG(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,EVENT_DATE TIMESTAMP DEFAULT NOW NOT NULL,DESCR VARCHAR(10000) NOT NULL,PARAMS VARCHAR,HANDLER VARCHAR DEFAULT 'it.eng.spagobi.events.handlers.DefaultEventPresentationHandler' NOT NULL,CONSTRAINT XPKSBI_EVENTS_LOG PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_ROLES(EVENT_ID INTEGER NOT NULL,ROLE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_EVENTS_ROLES PRIMARY KEY(EVENT_ID,ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_2 FOREIGN KEY(EVENT_ID) REFERENCES SBI_EVENTS_LOG(ID))
CREATE MEMORY TABLE QRTZ_JOB_DETAILS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,DESCRIPTION VARCHAR(120),JOB_CLASS_NAME VARCHAR(128) NOT NULL,IS_DURABLE VARCHAR(1) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,IS_STATEFUL VARCHAR(1) NOT NULL,REQUESTS_RECOVERY VARCHAR(1) NOT NULL,JOB_DATA BINARY,PRIMARY KEY(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,JOB_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(JOB_NAME,JOB_GROUP,JOB_LISTENER),CONSTRAINT SYS_FK_47 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,DESCRIPTION VARCHAR(120),NEXT_FIRE_TIME NUMERIC(13),PREV_FIRE_TIME NUMERIC(13),PRIORITY INTEGER,TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME NUMERIC(13) NOT NULL,END_TIME NUMERIC(13),CALENDAR_NAME VARCHAR(80),MISFIRE_INSTR NUMERIC(2),JOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_51 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,REPEAT_COUNT NUMERIC(7) NOT NULL,REPEAT_INTERVAL NUMERIC(12) NOT NULL,TIMES_TRIGGERED NUMERIC(7) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_55 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,CRON_EXPRESSION VARCHAR(80) NOT NULL,TIME_ZONE_ID VARCHAR(80),PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_59 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,BLOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_63 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,TRIGGER_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),CONSTRAINT SYS_FK_67 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CALENDARS(CALENDAR_NAME VARCHAR(80) NOT NULL PRIMARY KEY,CALENDAR BINARY NOT NULL)
CREATE MEMORY TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP VARCHAR(80) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID VARCHAR(95) NOT NULL PRIMARY KEY,TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,INSTANCE_NAME VARCHAR(80) NOT NULL,FIRED_TIME NUMERIC(13) NOT NULL,PRIORITY INTEGER NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(80),JOB_GROUP VARCHAR(80),IS_STATEFUL VARCHAR(1),REQUESTS_RECOVERY VARCHAR(1))
CREATE MEMORY TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME VARCHAR(80) NOT NULL PRIMARY KEY,LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,CHECKIN_INTERVAL NUMERIC(13) NOT NULL)
CREATE MEMORY TABLE QRTZ_LOCKS(LOCK_NAME VARCHAR(40) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE SBI_VIEWPOINTS(VP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER NOT NULL,VP_OWNER VARCHAR,VP_NAME VARCHAR NOT NULL,VP_DESC VARCHAR,VP_SCOPE VARCHAR NOT NULL,VP_VALUE_PARAMS VARCHAR,VP_CREATION_DATE TIMESTAMP DEFAULT NOW NOT NULL,CONSTRAINT XPKSBI_VIEWPOINTS PRIMARY KEY(VP_ID),CONSTRAINT FK_SBI_VIEWPOINTS_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_DATA_SOURCE(DS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR NOT NULL,JNDI VARCHAR,URL_CONNECTION VARCHAR,USERNAME VARCHAR,PWD VARCHAR,DRIVER VARCHAR,DIALECT_ID INTEGER NOT NULL,MULTI_SCHEMA BOOLEAN DEFAULT false,ATTR_SCHEMA VARCHAR(45) DEFAULT NULL,CONSTRAINT XPKSBI_DATA_SOURCE PRIMARY KEY(DS_ID),CONSTRAINT FK_SBI_DATA_SOURCE_1 FOREIGN KEY(DIALECT_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_BINARY_CONTENTS(BIN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIN_CONTENT LONGVARBINARY,CONSTRAINT XPKSBI_BINARY_CONTENTS PRIMARY KEY(BIN_ID))
CREATE MEMORY TABLE SBI_OBJECT_TEMPLATES(OBJ_TEMP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR,PROG INTEGER NOT NULL,CREATION_DATE TIMESTAMP,ACTIVE BOOLEAN,DIMENSION VARCHAR,CREATION_USER VARCHAR,CONSTRAINT XPKSBI_OBJECT_TEMPLATES PRIMARY KEY(OBJ_TEMP_ID),CONSTRAINT FK_SBI_OBJECT_TEMPLATES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECT_TEMPLATES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_OBJECT_NOTES(OBJ_NOTE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,EXEC_REQ VARCHAR(500),OWNER VARCHAR(40),ISPUBLIC BOOLEAN,CREATION_DATE TIMESTAMP,LAST_CHANGE_DATE TIMESTAMP,CONSTRAINT XPKSBI_OBJECT_NOTES PRIMARY KEY(OBJ_NOTE_ID),CONSTRAINT FK_SBI_OBJECT_NOTES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECT_NOTES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_SUBOBJECTS(SUBOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR(40) NOT NULL,DESCRIPTION VARCHAR(80),OWNER VARCHAR(40),ISPUBLIC BOOLEAN,CREATION_DATE TIMESTAMP,LAST_CHANGE_DATE TIMESTAMP,CONSTRAINT XPKSBI_SUBOBJECT PRIMARY KEY(SUBOBJ_ID),CONSTRAINT FK_SBI_SUBOBJECT_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SUBOBJECT_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_SNAPSHOTS(SNAP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR(100),DESCRIPTION VARCHAR(1000),CREATION_DATE TIMESTAMP,CONSTRAINT XPKSBI_SNAPSHOT PRIMARY KEY(SNAP_ID),CONSTRAINT FK_SBI_SNAPSHOT_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SNAPSHOT_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_USER_FUNC(USER_FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR(50) NOT NULL,DESCRIPTION VARCHAR(100) NOT NULL,CONSTRAINT XPKSBI_USER_FUNC PRIMARY KEY(USER_FUNCT_ID))
CREATE MEMORY TABLE SBI_ROLE_TYPE_USER_FUNC(ROLE_TYPE_ID INTEGER NOT NULL,USER_FUNCT_ID INTEGER NOT NULL,CONSTRAINT FK_SBI_ROLE_TYPE_USER_FUNC_1 FOREIGN KEY(ROLE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_ROLE_TYPE_USER_FUNC_2 FOREIGN KEY(USER_FUNCT_ID) REFERENCES SBI_USER_FUNC(USER_FUNCT_ID))
CREATE MEMORY TABLE SBI_DOSSIER_PRES(PRESENTATION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,WORKFLOW_PROCESS_ID BIGINT,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR,PROG INTEGER,CREATION_DATE TIMESTAMP,APPROVED SMALLINT,CONSTRAINT XPKSBI_DOSSIER_PRES PRIMARY KEY(PRESENTATION_ID),CONSTRAINT FK_SBI_DOSSIER_PRES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_DOSSIER_PRES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_DOSSIER_TEMP(PART_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,WORKFLOW_PROCESS_ID BIGINT,BIOBJ_ID INTEGER,PAGE_ID INTEGER,CONSTRAINT XPKSBI_DOSSIER_TEMP PRIMARY KEY(PART_ID),CONSTRAINT FK_SBI_DOSSIER_TEMP_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_DOSSIER_BIN_TEMP(BIN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,PART_ID INTEGER,NAME VARCHAR,BIN_CONTENT LONGVARBINARY,TYPE VARCHAR,CREATION_DATE TIMESTAMP,CONSTRAINT XPKSBI_DOSSIER_BIN_TEMP PRIMARY KEY(BIN_ID),CONSTRAINT FK_SBI_DOSSIER_BIN_TEMP_1 FOREIGN KEY(PART_ID) REFERENCES SBI_DOSSIER_TEMP(PART_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE SBI_REMEMBER_ME(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR(50) NOT NULL,DESCRIPTION VARCHAR,USERNAME VARCHAR(40) NOT NULL,BIOBJ_ID INTEGER NOT NULL,SUBOBJ_ID INTEGER,PARAMETERS VARCHAR,CONSTRAINT XPKSBI_REMEMBER_ME PRIMARY KEY(ID),CONSTRAINT FK_SBI_REMEMBER_ME_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE CASCADE,CONSTRAINT FK_SBI_REMEMBER_ME_2 FOREIGN KEY(SUBOBJ_ID) REFERENCES SBI_SUBOBJECTS(SUBOBJ_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE SBI_DATA_SET(DS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,DESCR VARCHAR(160),LABEL VARCHAR(50) NOT NULL,NAME VARCHAR(50) NOT NULL,FILE_NAME VARCHAR(300),QUERY VARCHAR,JCLASS_NAME VARCHAR(100),SCRIPT VARCHAR,ADRESS VARCHAR(250),EXECUTOR_CLASS VARCHAR(250),PARAMS VARCHAR(1000),DS_METADATA VARCHAR(1000),DATA_SOURCE_ID INTEGER,OBJECT_TYPE VARCHAR(50),OPERATION VARCHAR(50),TRANSFORMER_ID INTEGER,PIVOT_COLUMN VARCHAR(50),PIVOT_ROW VARCHAR(50),PIVOT_VALUE VARCHAR(50),NUM_ROWS BOOLEAN DEFAULT false,LANGUAGE_SCRIPT VARCHAR(50),CONSTRAINT XPKSBI_DATA_SET PRIMARY KEY(DS_ID),CONSTRAINT FK_SBI_DATA_SET_1 FOREIGN KEY(TRANSFORMER_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_MENU(MENU_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR,DESCR VARCHAR,PARENT_ID INTEGER DEFAULT 0,BIOBJ_ID INTEGER,VIEW_ICONS BOOLEAN,HIDE_TOOLBAR BOOLEAN,HIDE_SLIDERS BOOLEAN,STATIC_PAGE VARCHAR,BIOBJ_PARAMETERS VARCHAR,SUBOBJ_NAME VARCHAR,SNAPSHOT_NAME VARCHAR,SNAPSHOT_HISTORY INTEGER,FUNCTIONALITY VARCHAR,INITIAL_PATH VARCHAR,EXT_APP_URL VARCHAR(1000),PROG INTEGER DEFAULT 1 NOT NULL,CONSTRAINT XPKSBI_MENU PRIMARY KEY(MENU_ID))
CREATE MEMORY TABLE SBI_MENU_ROLE(MENU_ID INTEGER NOT NULL,EXT_ROLE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_MENU_ROLE PRIMARY KEY(MENU_ID,EXT_ROLE_ID),CONSTRAINT FK_SBI_MENU_ROLE_1 FOREIGN KEY(MENU_ID) REFERENCES SBI_MENU(MENU_ID),CONSTRAINT FK_SBI_MENU_ROLE_2 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_DIST_LIST(DL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,DESCR VARCHAR(160))
CREATE MEMORY TABLE SBI_DIST_LIST_USER(DLU_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,LIST_ID INTEGER NOT NULL,USER_ID VARCHAR(40) NOT NULL,E_MAIL VARCHAR(70) NOT NULL,CONSTRAINT FK_SBI_DIST_LIST_USER_1 FOREIGN KEY(LIST_ID) REFERENCES SBI_DIST_LIST(DL_ID))
CREATE MEMORY TABLE SBI_DIST_LIST_OBJECTS(REL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,DOC_ID INTEGER NOT NULL,DL_ID INTEGER NOT NULL,XML VARCHAR(5000) NOT NULL,CONSTRAINT FK_SBI_DIST_LIST_OBJECTS_1 FOREIGN KEY(DOC_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_DIST_LIST_OBJECTS_2 FOREIGN KEY(DL_ID) REFERENCES SBI_DIST_LIST(DL_ID))
CREATE MEMORY TABLE SBI_MEASURE_UNIT(ID_MEASURE_UNIT INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(20) DEFAULT NULL,SCALE_TYPE_ID INTEGER NOT NULL,SCALE_CD VARCHAR(40) DEFAULT NULL,SCALE_NM VARCHAR(400) DEFAULT NULL,CONSTRAINT SCALE_TYPE FOREIGN KEY(SCALE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE SBI_AUDIT(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USERNAME VARCHAR NOT NULL,USERGROUP VARCHAR,DOC_REF INTEGER,DOC_ID INTEGER,DOC_LABEL VARCHAR NOT NULL,DOC_NAME VARCHAR NOT NULL,DOC_TYPE VARCHAR NOT NULL,DOC_STATE VARCHAR NOT NULL,DOC_PARAMETERS VARCHAR,SUBOBJ_REF INTEGER,SUBOBJ_ID INTEGER,SUBOBJ_NAME VARCHAR(50),SUBOBJ_OWNER VARCHAR(50),SUBOBJ_ISPUBLIC SMALLINT,ENGINE_REF INTEGER,ENGINE_ID INTEGER,ENGINE_LABEL VARCHAR NOT NULL,ENGINE_NAME VARCHAR NOT NULL,ENGINE_TYPE VARCHAR NOT NULL,ENGINE_URL VARCHAR,ENGINE_DRIVER VARCHAR,ENGINE_CLASS VARCHAR,REQUEST_TIME TIMESTAMP NOT NULL,EXECUTION_START TIMESTAMP,EXECUTION_END TIMESTAMP,EXECUTION_TIME INTEGER,EXECUTION_STATE VARCHAR,ERROR SMALLINT,ERROR_MESSAGE VARCHAR,ERROR_CODE VARCHAR,EXECUTION_MODALITY VARCHAR,CONSTRAINT FK_SBI_AUDIT_1 FOREIGN KEY(DOC_REF) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE SET NULL,CONSTRAINT FK_SBI_AUDIT_2 FOREIGN KEY(ENGINE_REF) REFERENCES SBI_ENGINES(ENGINE_ID) ON DELETE SET NULL,CONSTRAINT FK_SBI_AUDIT_3 FOREIGN KEY(SUBOBJ_REF) REFERENCES SBI_SUBOBJECTS(SUBOBJ_ID) ON DELETE SET NULL)
CREATE MEMORY TABLE SBI_ACTIVITY_MONITORING(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,ACTION_TIME TIMESTAMP,USERNAME 	 	VARCHAR(40) NOT NULL,USERGROUP		VARCHAR(400),LOG_LEVEL 	VARCHAR(10) ,ACTION_CODE 	VARCHAR(45) NOT NULL, INFO VARCHAR(400),CONSTRAINT XPKSBI_ACTI_CONFIG PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_GEO_MAPS(MAP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,URL VARCHAR,FORMAT VARCHAR,BIN_ID INTEGER,CONSTRAINT XPKSBI_MAPS PRIMARY KEY(MAP_ID),CONSTRAINT FK_SBI_GEO_MAPS_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_GEO_FEATURES(FEATURE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,TYPE VARCHAR,CONSTRAINT XPKSBI_FEATURES PRIMARY KEY(FEATURE_ID))
CREATE MEMORY TABLE SBI_GEO_MAP_FEATURES(MAP_ID INTEGER NOT NULL,FEATURE_ID INTEGER NOT NULL,SVG_GROUP VARCHAR,VISIBLE_FLAG VARCHAR,CONSTRAINT XPKSBI_GEO_MAP_FEATURES PRIMARY KEY(MAP_ID,FEATURE_ID),CONSTRAINT FK_SBI_GEO_MAP_FEATURES_1 FOREIGN KEY(MAP_ID) REFERENCES SBI_GEO_MAPS(MAP_ID),CONSTRAINT FK_SBI_GEO_MAP_FEATURES_2 FOREIGN KEY(FEATURE_ID) REFERENCES SBI_GEO_FEATURES(FEATURE_ID))
CREATE MEMORY TABLE SBI_RESOURCES(RESOURCE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,RESOURCE_TYPE_ID INTEGER NOT NULL,TABLE_NAME VARCHAR(40) DEFAULT NULL,COLUMN_NAME VARCHAR(40) DEFAULT NULL,RESOURCE_NAME VARCHAR(40) DEFAULT NULL,RESOURCE_DESCR VARCHAR(400) DEFAULT NULL,	RESOURCE_CODE VARCHAR(45) NOT NULL,CONSTRAINT SBI_RESOURCES_IBFK_1 FOREIGN KEY(RESOURCE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE UNIQUE INDEX UNIQUE_RESOURCE_NAME ON SBI_RESOURCES(RESOURCE_CODE)
CREATE MEMORY TABLE SBI_THRESHOLD(THRESHOLD_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,THRESHOLD_TYPE_ID INTEGER NOT NULL,NAME VARCHAR(127) DEFAULT NULL,DESCRIPTION VARCHAR(255) DEFAULT NULL,CODE VARCHAR(45) DEFAULT NULL,CONSTRAINT SBI_THRESHOLD_IBFK_1 FOREIGN KEY(THRESHOLD_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE UNIQUE INDEX CODE_UNIQUE ON SBI_THRESHOLD(CODE)

CREATE UNIQUE INDEX LABEL_THID_UNIQUE ON SBI_THRESHOLD_VALUE(LABEL,THRESHOLD_ID)
CREATE MEMORY TABLE SBI_KPI_PERIODICITY(ID_KPI_PERIODICITY INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(400) DEFAULT NULL,MONTHS INTEGER DEFAULT NULL,DAYS INTEGER DEFAULT NULL,HOURS INTEGER DEFAULT NULL,MINUTES INTEGER DEFAULT NULL,CHRON_STRING VARCHAR(20) DEFAULT NULL,START_DATE TIMESTAMP NOT NULL)
CREATE UNIQUE INDEX NAME_UNIQUE ON SBI_KPI_PERIODICITY(NAME)
CREATE MEMORY TABLE SBI_KPI(KPI_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ID_MEASURE_UNIT INTEGER DEFAULT NULL,DS_ID INTEGER DEFAULT NULL,THRESHOLD_ID INTEGER DEFAULT NULL,ID_KPI_PARENT INTEGER DEFAULT NULL,NAME VARCHAR(400) NOT NULL,CODE VARCHAR(40) DEFAULT NULL,METRIC VARCHAR(1000) DEFAULT NULL,DESCRIPTION VARCHAR(1000) DEFAULT NULL,WEIGHT DOUBLE DEFAULT NULL,FLG_IS_FATHER CHAR DEFAULT NULL,IS_ADDITIVE CHAR DEFAULT NULL,KPI_TYPE INTEGER DEFAULT NULL,METRIC_SCALE_TYPE INTEGER DEFAULT NULL,MEASURE_TYPE INTEGER DEFAULT NULL,INTERPRETATION VARCHAR(1000) DEFAULT NULL,INPUT_ATTRIBUTES VARCHAR(1000) DEFAULT NULL,MODEL_REFERENCE VARCHAR(255) DEFAULT NULL,TARGET_AUDIENCE VARCHAR(1000) DEFAULT NULL,CONSTRAINT SBI_KPI_IBFK_1 FOREIGN KEY(DS_ID) REFERENCES SBI_DATA_SET(DS_ID),CONSTRAINT SBI_KPI_IBFK_2 FOREIGN KEY(ID_KPI_PARENT) REFERENCES SBI_KPI(KPI_ID),CONSTRAINT SBI_KPI_IBFK_3 FOREIGN KEY(ID_MEASURE_UNIT) REFERENCES SBI_MEASURE_UNIT(ID_MEASURE_UNIT),CONSTRAINT SBI_KPI_IBFK_4 FOREIGN KEY(THRESHOLD_ID) REFERENCES SBI_THRESHOLD(THRESHOLD_ID),CONSTRAINT SBI_KPI_IBFK_5 FOREIGN KEY(KPI_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_KPI_IBFK_6 FOREIGN KEY(METRIC_SCALE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_KPI_IBFK_7 FOREIGN KEY(MEASURE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE UNIQUE INDEX KPI_CODE_UNIQUE ON SBI_KPI(CODE)
CREATE MEMORY TABLE SBI_KPI_DOCUMENTS(ID_KPI_DOC INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,BIOBJ_ID INTEGER NOT NULL,KPI_ID INTEGER NOT NULL,CONSTRAINT SBI_KPI_DOCUMENTS_IBFK_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT SBI_KPI_DOCUMENTS_IBFK_2 FOREIGN KEY(KPI_ID) REFERENCES SBI_KPI(KPI_ID))
CREATE MEMORY TABLE SBI_KPI_INSTANCE(ID_KPI_INSTANCE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_ID INTEGER NOT NULL,THRESHOLD_ID INTEGER NOT NULL,ID_MEASURE_UNIT INTEGER DEFAULT NULL,WEIGHT DOUBLE DEFAULT NULL,BEGIN_DT TIMESTAMP NOT NULL,CHART_TYPE_ID INTEGER DEFAULT NULL,TARGET DOUBLE DEFAULT NULL,CONSTRAINT SBI_KPI_INSTANCE_3 FOREIGN KEY(CHART_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_KPI_INSTANCE_5 FOREIGN KEY(THRESHOLD_ID) REFERENCES SBI_THRESHOLD(THRESHOLD_ID),CONSTRAINT SBI_KPI_INSTANCE_IBFK_1 FOREIGN KEY(KPI_ID) REFERENCES SBI_KPI(KPI_ID),CONSTRAINT SBI_KPI_INSTANCE_IBFK_2 FOREIGN KEY(ID_MEASURE_UNIT) REFERENCES SBI_MEASURE_UNIT(ID_MEASURE_UNIT))
CREATE MEMORY TABLE SBI_KPI_INST_PERIOD(KPI_INST_PERIOD_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_INSTANCE_ID INTEGER NOT NULL,PERIODICITY_ID INTEGER NOT NULL,DEFAULT_VALUE TINYINT DEFAULT NULL,CONSTRAINT FK_SBI_KPI_INST_PERIOD_1 FOREIGN KEY(PERIODICITY_ID) REFERENCES SBI_KPI_PERIODICITY(ID_KPI_PERIODICITY),CONSTRAINT FK_SBI_KPI_INST_PERIOD_2 FOREIGN KEY(KPI_INSTANCE_ID) REFERENCES SBI_KPI_INSTANCE(ID_KPI_INSTANCE))
CREATE MEMORY TABLE SBI_KPI_INSTANCE_HISTORY(ID_KPI_INSTANCE_HISTORY INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ID_MEASURE_UNIT INTEGER DEFAULT NULL,THRESHOLD_ID INTEGER NOT NULL,ID_KPI_INSTANCE INTEGER NOT NULL,WEIGHT DOUBLE DEFAULT NULL,BEGIN_DT TIMESTAMP NOT NULL,END_DT TIMESTAMP NOT NULL,CHART_TYPE_ID INTEGER NOT NULL,TARGET DOUBLE DEFAULT NULL,CONSTRAINT SBI_KPI_INSTANCE_HISTORY_4 FOREIGN KEY(CHART_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_KPI_INSTANCE_HISTORY_IBFK_1 FOREIGN KEY(ID_MEASURE_UNIT) REFERENCES SBI_MEASURE_UNIT(ID_MEASURE_UNIT),CONSTRAINT SBI_KPI_INSTANCE_HISTORY_IBFK_2 FOREIGN KEY(THRESHOLD_ID) REFERENCES SBI_THRESHOLD(THRESHOLD_ID),CONSTRAINT SBI_KPI_INSTANCE_HISTORY_IBFK_3 FOREIGN KEY(ID_KPI_INSTANCE) REFERENCES SBI_KPI_INSTANCE(ID_KPI_INSTANCE))
CREATE MEMORY TABLE SBI_KPI_MODEL(KPI_MODEL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_ID INTEGER DEFAULT NULL,KPI_MODEL_TYPE_ID INTEGER NOT NULL,KPI_PARENT_MODEL_ID INTEGER DEFAULT NULL,KPI_MODEL_CD VARCHAR(40) DEFAULT NULL,KPI_MODEL_NM VARCHAR(400) DEFAULT NULL,KPI_MODEL_DESC VARCHAR(1000) DEFAULT NULL, KPI_MODEL_LBL VARCHAR(100) NOT NULL ,CONSTRAINT SBI_KPI_MODEL_IBFK_1 FOREIGN KEY(KPI_MODEL_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_KPI_MODEL_IBFK_2 FOREIGN KEY(KPI_ID) REFERENCES SBI_KPI(KPI_ID),CONSTRAINT SBI_KPI_MODEL_IBFK_3 FOREIGN KEY(KPI_PARENT_MODEL_ID) REFERENCES SBI_KPI_MODEL(KPI_MODEL_ID))
CREATE UNIQUE INDEX UNIQUE_KPI_MODEL_CD ON SBI_KPI_MODEL(KPI_MODEL_CD)
CREATE MEMORY TABLE SBI_KPI_MODEL_INST(KPI_MODEL_INST INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_MODEL_INST_PARENT INTEGER DEFAULT NULL,ID_KPI_INSTANCE INTEGER DEFAULT NULL,NAME VARCHAR(400) NOT NULL,DESCRIPTION VARCHAR(1000) DEFAULT NULL,LABEL VARCHAR(100) NOT NULL,START_DATE TIMESTAMP DEFAULT NULL,END_DATE TIMESTAMP DEFAULT NULL,KPI_MODEL_ID INTEGER DEFAULT NULL, MODELUUID VARCHAR(400) DEFAULT NULL ,CONSTRAINT FK_SBI_KPI_MODEL_INST_3 FOREIGN KEY(KPI_MODEL_ID) REFERENCES SBI_KPI_MODEL(KPI_MODEL_ID),CONSTRAINT SBI_KPI_MODEL_INST_2 FOREIGN KEY(KPI_MODEL_INST_PARENT) REFERENCES SBI_KPI_MODEL_INST(KPI_MODEL_INST),CONSTRAINT SBI_KPI_MODEL_INST_IBFK_1 FOREIGN KEY(ID_KPI_INSTANCE) REFERENCES SBI_KPI_INSTANCE(ID_KPI_INSTANCE))
CREATE MEMORY TABLE SBI_KPI_MODEL_RESOURCES(KPI_MODEL_RESOURCES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,RESOURCE_ID INTEGER NOT NULL,KPI_MODEL_INST INTEGER NOT NULL,CONSTRAINT SBI_KPI_MODEL_RESOURCES_IBFK_1 FOREIGN KEY(KPI_MODEL_INST) REFERENCES SBI_KPI_MODEL_INST(KPI_MODEL_INST),CONSTRAINT SBI_KPI_MODEL_RESOURCES_IBFK_2 FOREIGN KEY(RESOURCE_ID) REFERENCES SBI_RESOURCES(RESOURCE_ID))
CREATE MEMORY TABLE SBI_KPI_ROLE(ID_KPI_ROLE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_ID INTEGER NOT NULL,EXT_ROLE_ID INTEGER NOT NULL,CONSTRAINT SBI_KPI_ROLE_IBFK_1 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT SBI_KPI_ROLE_IBFK_2 FOREIGN KEY(KPI_ID) REFERENCES SBI_KPI(KPI_ID))
CREATE MEMORY TABLE SBI_KPI_VALUE(ID_KPI_INSTANCE_VALUE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ID_KPI_INSTANCE INTEGER NOT NULL,RESOURCE_ID INTEGER DEFAULT NULL,VALUE VARCHAR(40) DEFAULT NULL,BEGIN_DT TIMESTAMP DEFAULT NULL,END_DT TIMESTAMP DEFAULT NULL,DESCRIPTION VARCHAR(100) DEFAULT NULL,XML_DATA VARCHAR, ORG_UNIT_ID INTEGER, HIERARCHY_ID INTEGER, COMPANY VARCHAR(200),CONSTRAINT SBI_KPI_VALUE_IBFK_1 FOREIGN KEY(ID_KPI_INSTANCE) REFERENCES SBI_KPI_INSTANCE(ID_KPI_INSTANCE),CONSTRAINT SBI_KPI_VALUE_IBFK_2 FOREIGN KEY(RESOURCE_ID) REFERENCES SBI_RESOURCES(RESOURCE_ID))
CREATE MEMORY TABLE SBI_KPI_ERROR(KPI_ERROR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_MODEL_INST_ID INTEGER NOT NULL,USER_MSG VARCHAR(1000) DEFAULT NULL,FULL_MSG VARCHAR DEFAULT NULL,TS_DATE TIMESTAMP DEFAULT NULL, LABEL_MOD_INST VARCHAR(100) DEFAULT NULL,PARAMETERS VARCHAR(1000),CONSTRAINT FK_SBI_KPI_ERROR_MODEL_1 FOREIGN KEY(KPI_MODEL_INST_ID) REFERENCES SBI_KPI_MODEL_INST(KPI_MODEL_INST))
CREATE MEMORY TABLE SBI_ALARM(ALARM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ID_KPI_INSTANCE INTEGER,MODALITY_ID INTEGER NOT NULL,DOCUMENT_ID INTEGER DEFAULT NULL,LABEL VARCHAR(50) DEFAULT NULL,NAME VARCHAR(50) DEFAULT NULL,DESCR VARCHAR(200) DEFAULT NULL,TEXT VARCHAR(1000) NOT NULL,URL VARCHAR(20) DEFAULT NULL,SINGLE_EVENT CHAR DEFAULT NULL,AUTO_DISABLED CHAR DEFAULT NULL,ID_THRESHOLD_VALUE INTEGER,CONSTRAINT SBI_ALARM_IBFK_1 FOREIGN KEY(MODALITY_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_ALARM_IBFK_2 FOREIGN KEY(DOCUMENT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT SBI_ALARM_IBFK_3 FOREIGN KEY(ID_KPI_INSTANCE) REFERENCES SBI_KPI_INSTANCE(ID_KPI_INSTANCE),CONSTRAINT SBI_ALARM_IBFK_4 FOREIGN KEY(ID_THRESHOLD_VALUE) REFERENCES SBI_THRESHOLD_VALUE(ID_THRESHOLD_VALUE))
CREATE UNIQUE INDEX LABEL_UNIQUE ON SBI_ALARM(LABEL)
CREATE MEMORY TABLE SBI_ALARM_CONTACT(ALARM_CONTACT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR NOT NULL,EMAIL VARCHAR DEFAULT NULL,MOBILE VARCHAR DEFAULT NULL,RESOURCES VARCHAR DEFAULT NULL)
CREATE UNIQUE INDEX ALARM_NAME_UNIQUE ON SBI_ALARM_CONTACT(NAME)
CREATE MEMORY TABLE SBI_ALARM_DISTRIBUTION(ALARM_CONTACT_ID INTEGER NOT NULL,ALARM_ID INTEGER NOT NULL,PRIMARY KEY(ALARM_CONTACT_ID,ALARM_ID),CONSTRAINT SBI_ALARM_DISTRIBUTION_IBFK_1 FOREIGN KEY(ALARM_ID) REFERENCES SBI_ALARM(ALARM_ID),CONSTRAINT SBI_ALARM_DISTRIBUTION_IBFK_2 FOREIGN KEY(ALARM_CONTACT_ID) REFERENCES SBI_ALARM_CONTACT(ALARM_CONTACT_ID))
CREATE MEMORY TABLE SBI_ALARM_EVENT(ALARM_EVENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ALARM_ID INTEGER NOT NULL,EVENT_TS TIMESTAMP DEFAULT NULL,ACTIVE CHAR DEFAULT NULL,KPI_VALUE VARCHAR(50) DEFAULT NULL,THRESHOLD_VALUE VARCHAR(50) DEFAULT NULL,KPI_NAME VARCHAR(100) DEFAULT NULL,RESOURCES VARCHAR(200) DEFAULT NULL,KPI_DESCRIPTION VARCHAR(100),RESOURCE_ID INTEGER,KPI_INSTANCE_ID INTEGER,CONSTRAINT SBI_ALARM_EVENT_IBFK_1 FOREIGN KEY(ALARM_ID) REFERENCES SBI_ALARM(ALARM_ID))
CREATE MEMORY TABLE SBI_EXPORTERS(ENGINE_ID INTEGER NOT NULL,DOMAIN_ID INTEGER NOT NULL,DEFAULT_VALUE BOOLEAN,CONSTRAINT XPKSBI_EXPORTERS PRIMARY KEY(ENGINE_ID,DOMAIN_ID),CONSTRAINT SBI_EXPORTERS_1 FOREIGN KEY(DOMAIN_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT SBI_EXPORTERS_2 FOREIGN KEY(ENGINE_ID) REFERENCES SBI_ENGINES(ENGINE_ID))
CREATE MEMORY TABLE SBI_OBJ_METADATA(OBJ_META_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,LABEL VARCHAR NOT NULL,NAME VARCHAR NOT NULL,DESCRIPTION VARCHAR,DATA_TYPE_ID INTEGER NOT NULL,CREATION_DATE TIMESTAMP,CONSTRAINT XPKSBI_OBJ_METADATA PRIMARY KEY(OBJ_META_ID),CONSTRAINT FK_SBI_OBJ_METADATA_1 FOREIGN KEY(DATA_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID));
CREATE MEMORY TABLE SBI_OBJ_METACONTENTS(OBJ_METACONTENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,OBJMETA_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL, SUBOBJ_ID INTEGER, BIN_ID INTEGER, CREATION_DATE TIMESTAMP NOT NULL, LAST_CHANGE_DATE TIMESTAMP NOT NULL,CONSTRAINT XPKSBI_OBJ_METACONTENT PRIMARY KEY(OBJ_METACONTENT_ID),CONSTRAINT FK_SBI_OBJ_METACONTENT_1 FOREIGN KEY(OBJMETA_ID) REFERENCES SBI_OBJ_METADATA(OBJ_META_ID),CONSTRAINT FK_SBI_OBJ_METACONTENT_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID), CONSTRAINT FK_SBI_OBJ_METACONTENT_3 FOREIGN KEY(SUBOBJ_ID) REFERENCES SBI_SUBOBJECTS(SUBOBJ_ID), CONSTRAINT FK_SBI_OBJ_METACONTENT_4 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID));
CREATE MEMORY TABLE SBI_CONFIG(ID	INTEGER  GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL, LABEL	VARCHAR(100) NOT NULL, NAME	VARCHAR(100) NULL,DESCRIPTION	VARCHAR(500) NULL,IS_ACTIVE	BOOLEAN DEFAULT TRUE,VALUE_CHECK 	VARCHAR(1000) NULL,	VALUE_TYPE_ID 	INTEGER NULL,CONSTRAINT XPKSBI_CONFIG PRIMARY KEY(ID),CONSTRAINT FK_SBI_CONFIG_1 FOREIGN KEY(VALUE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID));

CREATE MEMORY TABLE SBI_USER (USER_ID VARCHAR(100) NOT NULL,PASSWORD VARCHAR(150),FULL_NAME VARCHAR(255),ID INTEGER NOT NULL, PRIMARY KEY (ID))
CREATE MEMORY TABLE SBI_ATTRIBUTE (ATTRIBUTE_NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(500) NOT NULL,	ATTRIBUTE_ID INTEGER NOT NULL, PRIMARY KEY (ATTRIBUTE_ID))
CREATE MEMORY TABLE SBI_USER_ATTRIBUTES (ID INTEGER NOT NULL,ATTRIBUTE_ID INTEGER NOT NULL,	ATTRIBUTE_VALUE VARCHAR(500), PRIMARY KEY (ID,ATTRIBUTE_ID))
CREATE MEMORY TABLE SBI_EXT_USER_ROLES (ID INTEGER NOT NULL,EXT_ROLE_ID INTEGER NOT NULL, PRIMARY KEY (ID,EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_KPI_REL (KPI_REL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,KPI_FATHER_ID INTEGER NOT NULL, KPI_CHILD_ID INTEGER NOT NULL, PARAMETER VARCHAR NULL, CONSTRAINT FK_SBI_KPI_REL_1 FOREIGN KEY(KPI_CHILD_ID) REFERENCES SBI_KPI(KPI_ID), CONSTRAINT FK_SBI_KPI_REL_2 FOREIGN KEY(KPI_FATHER_ID) REFERENCES SBI_KPI(KPI_ID));

CREATE MEMORY TABLE SBI_UDP (UDP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, TYPE_ID INTEGER NOT NULL, FAMILY_ID INTEGER NOT NULL, LABEL VARCHAR NOT NULL, NAME VARCHAR NOT NULL, DESCRIPTION VARCHAR NULL,	IS_MULTIVALUE BOOLEAN DEFAULT FALSE, CONSTRAINT FK_SBI_SBI_UDP_1 FOREIGN KEY(TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),	CONSTRAINT FK_SBI_SBI_UDP_2 FOREIGN KEY(FAMILY_ID) REFERENCES SBI_DOMAINS(VALUE_ID));
CREATE UNIQUE INDEX XAK1SBI_UDP ON SBI_UDP(LABEL);
CREATE INDEX XIF3_SBI_SBI_UDP ON SBI_UDP(TYPE_ID);
CREATE INDEX XIF2SBI_SBI_UDP ON SBI_UDP(FAMILY_ID);
CREATE MEMORY TABLE SBI_UDP_VALUE (UDP_VALUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,UDP_ID INTEGER NOT NULL, VALUE VARCHAR NOT NULL, PROG INTEGER NULL, LABEL VARCHAR NOT NULL,	NAME VARCHAR NULL, FAMILY VARCHAR NULL, BEGIN_TS TIMESTAMP NOT NULL, END_TS TIMESTAMP NULL, REFERENCE_ID INTEGER NULL, CONSTRAINT FK_SBI_UDP_VALUE_1 FOREIGN KEY(UDP_ID) REFERENCES SBI_UDP(UDP_ID));
CREATE INDEX XIF2SBI_SBI_UDP_VALUE ON SBI_UDP_VALUE(UDP_ID);

CREATE MEMORY TABLE SBI_ORG_UNIT (ID INTEGER NOT NULL,LABEL VARCHAR(100) NOT NULL,NAME VARCHAR(200) NOT NULL,DESCRIPTION VARCHAR(1000),UNIQUE (LABEL, NAME),PRIMARY KEY (ID));
CREATE MEMORY TABLE SBI_ORG_UNIT_HIERARCHIES (ID INTEGER NOT NULL,LABEL VARCHAR(100) NOT NULL,NAME VARCHAR(200) NOT NULL,DESCRIPTION VARCHAR(1000),TARGET VARCHAR(1000),COMPANY VARCHAR(100) NOT NULL,UNIQUE (LABEL, COMPANY),PRIMARY KEY (ID));
CREATE MEMORY TABLE SBI_ORG_UNIT_NODES (NODE_ID INTEGER NOT NULL,OU_ID INTEGER NOT NULL,HIERARCHY_ID INTEGER NOT NULL,PARENT_NODE_ID INTEGER NULL,PATH VARCHAR(4000) NOT NULL,PRIMARY KEY (NODE_ID));
CREATE MEMORY TABLE SBI_ORG_UNIT_GRANT (ID INTEGER NOT NULL,HIERARCHY_ID  INTEGER NOT NULL,KPI_MODEL_INST_NODE_ID INTEGER NOT NULL,START_DATE DATE,END_DATE DATE,LABEL VARCHAR(200) NOT NULL,NAME VARCHAR(400) NOT NULL,DESCRIPTION VARCHAR(1000),UNIQUE (LABEL),PRIMARY KEY (ID));
CREATE MEMORY TABLE SBI_ORG_UNIT_GRANT_NODES (NODE_ID INTEGER NOT NULL,KPI_MODEL_INST_NODE_ID INTEGER NOT NULL,GRANT_ID INTEGER NOT NULL,PRIMARY KEY (NODE_ID, KPI_MODEL_INST_NODE_ID, GRANT_ID));

CREATE MEMORY TABLE SBI_GOAL (GOAL_ID INTEGER NOT NULL,HIERARCHY_ID INTEGER NOT NULL,GRANT_ID INTEGER NOT NULL, START_DATE DATE,END_DATE DATE,NAME VARCHAR(20),	DESCRIPTION VARCHAR(20),PRIMARY KEY (GOAL_ID));
CREATE MEMORY TABLE SBI_GOAL_HIERARCHY (GOAL_HIERARCHY_ID INTEGER NOT NULL, ORG_UNIT_ID INTEGER NOT NULL, GOAL_ID INTEGER NOT NULL, PARENT_ID INTEGER, NAME VARCHAR(50), LABEL VARCHAR(50),GOAL VARCHAR(1000), PRIMARY KEY (GOAL_HIERARCHY_ID));
CREATE MEMORY TABLE SBI_GOAL_KPI ( GOAL_KPI_ID INTEGER NOT NULL, KPI_INSTANCE_ID INTEGER NOT NULL, GOAL_HIERARCHY_ID INTEGER NOT NULL, WEIGHT1 DOUBLE , WEIGHT2 DOUBLE , THRESHOLD1 DOUBLE, THRESHOLD2 DOUBLE, THRESHOLD1SIGN INTEGER, THRESHOLD2SIGN INTEGER,  PRIMARY KEY (GOAL_KPI_ID));

ALTER TABLE SBI_USER_ATTRIBUTES ADD CONSTRAINT FK_SBI_USER_ATTRIBUTES_1 FOREIGN KEY (ID) REFERENCES SBI_USER (ID)
ALTER TABLE SBI_EXT_USER_ROLES ADD CONSTRAINT FK_SBI_EXT_USER_ROLES_1 FOREIGN KEY (ID) REFERENCES SBI_USER (ID)
ALTER TABLE SBI_USER_ATTRIBUTES ADD CONSTRAINT FK_SBI_USER_ATTRIBUTES_2 FOREIGN KEY (ATTRIBUTE_ID) REFERENCES SBI_ATTRIBUTE (ATTRIBUTE_ID)
ALTER TABLE SBI_EXT_USER_ROLES ADD CONSTRAINT FK_SBI_EXT_USER_ROLES_2 FOREIGN KEY (EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES (EXT_ROLE_ID)


ALTER TABLE SBI_USER ADD DT_PWD_BEGIN DATETIME
ALTER TABLE SBI_USER ADD DT_PWD_END DATETIME
ALTER TABLE SBI_USER ADD FLG_PWD_BLOCKED BOOLEAN
ALTER TABLE SBI_USER ADD DT_LAST_ACCESS DATETIME

ALTER TABLE SBI_CHECKS ADD CONSTRAINT FK_SBI_CHECKS_1 FOREIGN KEY(VALUE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID)
ALTER TABLE SBI_ENGINES ADD CONSTRAINT FK_SBI_ENGINE_3 FOREIGN KEY(DEFAULT_DS_ID) REFERENCES SBI_DATA_SOURCE(DS_ID)
ALTER TABLE SBI_FUNC_ROLE ADD CONSTRAINT FK_SBI_FUNC_ROLE_3 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID)
ALTER TABLE SBI_OBJ_FUNC ADD CONSTRAINT FK_SBI_OBJ_FUNC_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_2 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID)
ALTER TABLE SBI_OBJ_STATE ADD CONSTRAINT FK_SBI_OBJ_STATE_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJECTS ADD CONSTRAINT FK_SBI_OBJECTS_6 FOREIGN KEY(DATA_SOURCE_ID) REFERENCES SBI_DATA_SOURCE(DS_ID)

ALTER TABLE SBI_ORG_UNIT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_NODES_1 FOREIGN KEY ( OU_ID ) REFERENCES SBI_ORG_UNIT ( ID ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_NODES_2 FOREIGN KEY ( HIERARCHY_ID ) REFERENCES SBI_ORG_UNIT_HIERARCHIES ( ID ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_NODES_3 FOREIGN KEY ( PARENT_NODE_ID ) REFERENCES SBI_ORG_UNIT_NODES ( NODE_ID ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_GRANT ADD CONSTRAINT FK_SBI_ORG_UNIT_GRANT_2 FOREIGN KEY ( HIERARCHY_ID ) REFERENCES SBI_ORG_UNIT_HIERARCHIES ( ID ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_GRANT ADD CONSTRAINT FK_SBI_ORG_UNIT_GRANT_3 FOREIGN KEY ( KPI_MODEL_INST_NODE_ID ) REFERENCES SBI_KPI_MODEL_INST ( KPI_MODEL_INST ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_GRANT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_GRANT_NODES_1 FOREIGN KEY ( NODE_ID ) REFERENCES SBI_ORG_UNIT_NODES ( NODE_ID ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_GRANT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_GRANT_NODES_2 FOREIGN KEY ( KPI_MODEL_INST_NODE_ID ) REFERENCES SBI_KPI_MODEL_INST ( KPI_MODEL_INST ) ON DELETE CASCADE;
ALTER TABLE SBI_ORG_UNIT_GRANT_NODES ADD CONSTRAINT FK_SBI_ORG_UNIT_GRANT_NODES_3 FOREIGN KEY ( GRANT_ID ) REFERENCES SBI_ORG_UNIT_GRANT ( ID ) ON DELETE CASCADE;

ALTER TABLE SBI_GOAL ADD CONSTRAINT FK_GRANT_ID_GRANT FOREIGN KEY ( GRANT_ID ) REFERENCES SBI_ORG_UNIT_HIERARCHIES ( ID ) ON DELETE CASCADE;   
ALTER TABLE SBI_GOAL_HIERARCHY ADD CONSTRAINT FK_SBI_GOAL_HIERARCHY_GOAL  FOREIGN KEY (GOAL_ID) REFERENCES SBI_GOAL (GOAL_ID) ON DELETE CASCADE;
ALTER TABLE SBI_GOAL_HIERARCHY ADD CONSTRAINT FK_SBI_GOAL_HIERARCHY_PARENT  FOREIGN KEY (PARENT_ID) REFERENCES SBI_GOAL_HIERARCHY (GOAL_HIERARCHY_ID) ON DELETE CASCADE ;
ALTER TABLE SBI_GOAL_KPI ADD CONSTRAINT FK_SBI_GOAL_KPI_GOAL  FOREIGN KEY (GOAL_HIERARCHY_ID) REFERENCES SBI_GOAL_HIERARCHY (GOAL_HIERARCHY_ID)  ON DELETE CASCADE;
ALTER TABLE SBI_GOAL_KPI ADD CONSTRAINT FK_SBI_GOAL_KPI_KPI  FOREIGN KEY (KPI_INSTANCE_ID) REFERENCES SBI_KPI_MODEL_INST (KPI_MODEL_INST) ON DELETE CASCADE;


ALTER TABLE SBI_CHECKS ALTER COLUMN CHECK_ID RESTART WITH 8
ALTER TABLE SBI_DOMAINS ALTER COLUMN VALUE_ID RESTART WITH 124
ALTER TABLE SBI_ENGINES ALTER COLUMN ENGINE_ID RESTART WITH 118
ALTER TABLE SBI_EXT_ROLES ALTER COLUMN EXT_ROLE_ID RESTART WITH 167
ALTER TABLE SBI_FUNCTIONS ALTER COLUMN FUNCT_ID RESTART WITH 153
ALTER TABLE SBI_LOV ALTER COLUMN LOV_ID RESTART WITH 214
ALTER TABLE SBI_OBJ_PAR ALTER COLUMN OBJ_PAR_ID RESTART WITH 312
ALTER TABLE SBI_OBJECTS ALTER COLUMN BIOBJ_ID RESTART WITH 226
ALTER TABLE SBI_PARAMETERS ALTER COLUMN PAR_ID RESTART WITH 205
ALTER TABLE SBI_PARUSE ALTER COLUMN USE_ID RESTART WITH 213
ALTER TABLE SBI_EVENTS ALTER COLUMN ID RESTART WITH 405
ALTER TABLE SBI_EVENTS_LOG ALTER COLUMN ID RESTART WITH 100
ALTER TABLE SBI_VIEWPOINTS ALTER COLUMN VP_ID RESTART WITH 1
ALTER TABLE SBI_DATA_SOURCE ALTER COLUMN DS_ID RESTART WITH 1
ALTER TABLE SBI_BINARY_CONTENTS ALTER COLUMN BIN_ID RESTART WITH 1
ALTER TABLE SBI_OBJECT_TEMPLATES ALTER COLUMN OBJ_TEMP_ID RESTART WITH 1
ALTER TABLE SBI_OBJECT_NOTES ALTER COLUMN OBJ_NOTE_ID RESTART WITH 1
ALTER TABLE SBI_SUBOBJECTS ALTER COLUMN SUBOBJ_ID RESTART WITH 1
ALTER TABLE SBI_SNAPSHOTS ALTER COLUMN SNAP_ID RESTART WITH 1
ALTER TABLE SBI_USER_FUNC ALTER COLUMN USER_FUNCT_ID RESTART WITH 42
ALTER TABLE SBI_DOSSIER_PRES ALTER COLUMN PRESENTATION_ID RESTART WITH 1
ALTER TABLE SBI_DOSSIER_TEMP ALTER COLUMN PART_ID RESTART WITH 1
ALTER TABLE SBI_DOSSIER_BIN_TEMP ALTER COLUMN BIN_ID RESTART WITH 1
ALTER TABLE SBI_REMEMBER_ME ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SBI_DATA_SET ALTER COLUMN DS_ID RESTART WITH 1
ALTER TABLE SBI_MENU ALTER COLUMN MENU_ID RESTART WITH 1
ALTER TABLE SBI_DIST_LIST ALTER COLUMN DL_ID RESTART WITH 1
ALTER TABLE SBI_DIST_LIST_USER ALTER COLUMN DLU_ID RESTART WITH 1
ALTER TABLE SBI_DIST_LIST_OBJECTS ALTER COLUMN REL_ID RESTART WITH 1
ALTER TABLE SBI_MEASURE_UNIT ALTER COLUMN ID_MEASURE_UNIT RESTART WITH 1
ALTER TABLE SBI_AUDIT ALTER COLUMN ID RESTART WITH 1046
ALTER TABLE SBI_GEO_MAPS ALTER COLUMN MAP_ID RESTART WITH 1
ALTER TABLE SBI_GEO_FEATURES ALTER COLUMN FEATURE_ID RESTART WITH 1
ALTER TABLE SBI_RESOURCES ALTER COLUMN RESOURCE_ID RESTART WITH 1
ALTER TABLE SBI_THRESHOLD ALTER COLUMN THRESHOLD_ID RESTART WITH 1
ALTER TABLE SBI_THRESHOLD_VALUE ALTER COLUMN ID_THRESHOLD_VALUE RESTART WITH 1
ALTER TABLE SBI_KPI_PERIODICITY ALTER COLUMN ID_KPI_PERIODICITY RESTART WITH 7
ALTER TABLE SBI_KPI ALTER COLUMN KPI_ID RESTART WITH 1
ALTER TABLE SBI_KPI_INSTANCE ALTER COLUMN ID_KPI_INSTANCE RESTART WITH 1
ALTER TABLE SBI_KPI_INST_PERIOD ALTER COLUMN KPI_INST_PERIOD_ID RESTART WITH 1
ALTER TABLE SBI_KPI_INSTANCE_HISTORY ALTER COLUMN ID_KPI_INSTANCE_HISTORY RESTART WITH 1
ALTER TABLE SBI_KPI_MODEL ALTER COLUMN KPI_MODEL_ID RESTART WITH 1
ALTER TABLE SBI_KPI_MODEL_INST ALTER COLUMN KPI_MODEL_INST RESTART WITH 1
ALTER TABLE SBI_KPI_MODEL_RESOURCES ALTER COLUMN KPI_MODEL_RESOURCES_ID RESTART WITH 1
ALTER TABLE SBI_KPI_ROLE ALTER COLUMN ID_KPI_ROLE RESTART WITH 1
ALTER TABLE SBI_KPI_VALUE ALTER COLUMN ID_KPI_INSTANCE_VALUE RESTART WITH 1
ALTER TABLE SBI_ALARM ALTER COLUMN ALARM_ID RESTART WITH 1
ALTER TABLE SBI_ALARM_CONTACT ALTER COLUMN ALARM_CONTACT_ID RESTART WITH 1
ALTER TABLE SBI_ALARM_EVENT ALTER COLUMN ALARM_EVENT_ID RESTART WITH 1
ALTER TABLE SBI_OBJ_METADATA ALTER COLUMN OBJ_META_ID RESTART WITH 1
ALTER TABLE SBI_UDP ALTER COLUMN UDP_ID RESTART WITH 1
ALTER TABLE SBI_UDP_VALUE ALTER COLUMN UDP_VALUE_ID RESTART WITH 1
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 60
SET SCHEMA PUBLIC
INSERT INTO SBI_CHECKS VALUES(1,'Control if parameter is an Internet Address','CK-FIX-01','INTERNET ADDRESS',39,'','','Internet Address')
INSERT INTO SBI_CHECKS VALUES(2,'Control if  a parameter is Numeric','CK-FIX-02','NUMERIC',40,'','','Numeric')
INSERT INTO SBI_CHECKS VALUES(3,'Control if  a parameter is Alfanumeric','CK-FIX-03','ALFANUMERIC',41,'','','Alfanumeric')
INSERT INTO SBI_CHECKS VALUES(4,'Control if a parameter is a letter string','CK-FIX-04','LETTERSTRING',42,'','','Letter String')
INSERT INTO SBI_CHECKS VALUES(5,'Control if the parameter is present','CK-FIX-05','MANDATORY',43,'','','Mandatory')
INSERT INTO SBI_CHECKS VALUES(6,'Control if parameter is a Fiscal Code','CK-FIX-06','FISCALCODE',44,'','','Fiscal Code')
INSERT INTO SBI_CHECKS VALUES(7,'Control if parameter is a E-Mail','CK-FIX-07','EMAIL',45,'','','E-Mail')
INSERT INTO SBI_DOMAINS VALUES(1,'QUERY','sbidomains.nm.query','INPUT_TYPE','Input mode and values','sbidomains.ds.query')
INSERT INTO SBI_DOMAINS VALUES(2,'SCRIPT','sbidomains.nm.script','INPUT_TYPE','Input mode and values','sbidomains.ds.script')
INSERT INTO SBI_DOMAINS VALUES(3,'FIX_LOV','sbidomains.nm.fix_lov','INPUT_TYPE','Input mode and values','sbidomains.ds.fix_lov')
INSERT INTO SBI_DOMAINS VALUES(4,'JAVA_CLASS','sbidomains.nm.java_class','INPUT_TYPE','Input mode and values','sbidomains.ds.java_class')
INSERT INTO SBI_DOMAINS VALUES(5,'REPORT','sbidomains.nm.report','BIOBJ_TYPE','BI Object types','sbidomains.ds.report')
INSERT INTO SBI_DOMAINS VALUES(6,'OLAP','sbidomains.nm.olap','BIOBJ_TYPE','BI Object types','sbidomains.ds.olap')
INSERT INTO SBI_DOMAINS VALUES(7,'DATA_MINING','sbidomains.nm.data_mining','BIOBJ_TYPE','BI Object types','sbidomains.ds.data_mining')
INSERT INTO SBI_DOMAINS VALUES(8,'DASH','sbidomains.nm.dash','BIOBJ_TYPE','BI Object types','sbidomains.ds.dash')
INSERT INTO SBI_DOMAINS VALUES(9,'DATAMART','sbidomains.nm.datamart','BIOBJ_TYPE','BI Object types','sbidomains.ds.datamart')
INSERT INTO SBI_DOMAINS VALUES(10,'MAP','sbidomains.nm.map','BIOBJ_TYPE','BI Object types','sbidomains.ds.map')
INSERT INTO SBI_DOMAINS VALUES(11,'DOSSIER','sbidomains.nm.dossier','BIOBJ_TYPE','BI Object types','sbidomains.ds.dossier')
INSERT INTO SBI_DOMAINS VALUES(12,'OFFICE_DOC','sbidomains.nm.office_doc','BIOBJ_TYPE','BI Object types','sbidomains.ds.office_doc')
INSERT INTO SBI_DOMAINS VALUES(13,'ETL','sbidomains.nm.etl','BIOBJ_TYPE','BI Object types','sbidomains.ds.etl')
INSERT INTO SBI_DOMAINS VALUES(14,'DOCUMENT_COMPOSITE','sbidomains.nm.document_composite','BIOBJ_TYPE','BI Object types','sbidomains.ds.document_composite')
INSERT INTO SBI_DOMAINS VALUES(15,'KPI','Kpi','BIOBJ_TYPE','BI Object types','Kpi business indicator')
INSERT INTO SBI_DOMAINS VALUES(16,'BOOL','sbidomains.nm.bool','VALUE_TYPE','Input value types to check','sbidomains.ds.bool')
INSERT INTO SBI_DOMAINS VALUES(17,'SINGLE','sbidomains.nm.single','VALUE_TYPE','Input value types to check','sbidomains.ds.single')
INSERT INTO SBI_DOMAINS VALUES(18,'MULTI','sbidomains.nm.multi','VALUE_TYPE','Input value types to check','sbidomains.ds.multi')
INSERT INTO SBI_DOMAINS VALUES(19,'DATE','sbidomains.nm.date','PAR_TYPE','Parameter type','sbidomains.ds.date')
INSERT INTO SBI_DOMAINS VALUES(20,'NUM','sbidomains.nm.num','PAR_TYPE','Parameter type','sbidomains.ds.num')
INSERT INTO SBI_DOMAINS VALUES(21,'STRING','sbidomains.nm.string','PAR_TYPE','Parameter type','sbidomains.ds.string')
INSERT INTO SBI_DOMAINS VALUES(22,'USER','sbidomains.nm.user','ROLE_TYPE','Role type','sbidomains.ds.user')
INSERT INTO SBI_DOMAINS VALUES(23,'ADMIN','sbidomains.nm.admin','ROLE_TYPE','Role type','sbidomains.ds.admin')
INSERT INTO SBI_DOMAINS VALUES(24,'DEV_ROLE','sbidomains.nm.dev_role','ROLE_TYPE','Role type','sbidomains.ds.dev_role')
INSERT INTO SBI_DOMAINS VALUES(25,'TEST_ROLE','sbidomains.nm.test_role','ROLE_TYPE','Role type','sbidomains.ds.test_role')
INSERT INTO SBI_DOMAINS VALUES(26,'MODEL_ADMIN','sbidomains.nm.model_admin','ROLE_TYPE','Role type','sbidomains.ds.model_admin')
INSERT INTO SBI_DOMAINS VALUES(27,'SUSP','sbidomains.nm.susp','STATE','Object state','sbidomains.ds.susp')
INSERT INTO SBI_DOMAINS VALUES(28,'LOW_FUNCT','sbidomains.nm.low_funct','FUNCT_TYPE','Functionality','sbidomains.ds.low_funct')
INSERT INTO SBI_DOMAINS VALUES(29,'USER_FUNCT','sbidomains.nm.user_funct','FUNCT_TYPE','Functionality','sbidomains.ds.user_funct')
INSERT INTO SBI_DOMAINS VALUES(30,'DEV','sbidomains.nm.dev','STATE','Object state','sbidomains.ds.dev')
INSERT INTO SBI_DOMAINS VALUES(31,'TEST','sbidomains.nm.test','STATE','Object state','sbidomains.ds.test')
INSERT INTO SBI_DOMAINS VALUES(32,'REL','sbidomains.nm.rel','STATE','Object state','sbidomains.ds.rel')
INSERT INTO SBI_DOMAINS VALUES(33,'DATE','sbidomains.nm.date','CHECK','Check','sbidomains.ds.date')
INSERT INTO SBI_DOMAINS VALUES(34,'REGEXP','sbidomains.nm.regexp','CHECK','Check','sbidomains.ds.regexp')
INSERT INTO SBI_DOMAINS VALUES(35,'MAXLENGTH','sbidomains.nm.maxlength','CHECK','Check','sbidomains.ds.maxlength')
INSERT INTO SBI_DOMAINS VALUES(36,'RANGE','sbidomains.nm.range','CHECK','Check','sbidomains.ds.range')
INSERT INTO SBI_DOMAINS VALUES(37,'DECIMALS','sbidomains.nm.decimals','CHECK','Check','sbidomains.ds.decimals')
INSERT INTO SBI_DOMAINS VALUES(38,'MINLENGTH','sbidomains.nm.minlength','CHECK','Check','sbidomains.ds.minlength')
INSERT INTO SBI_DOMAINS VALUES(39,'INTERNET ADDRESS','sbidomains.nm.internet_address','PRED_CHECK','Pred Check','sbidomains.ds.internet_address')
INSERT INTO SBI_DOMAINS VALUES(40,'NUMERIC','sbidomains.nm.numeric','PRED_CHECK','Pred Check','sbidomains.ds.numeric')
INSERT INTO SBI_DOMAINS VALUES(41,'ALFANUMERIC','sbidomains.nm.alfanumeric','PRED_CHECK','Pred Check','sbidomains.ds.alfanumeric')
INSERT INTO SBI_DOMAINS VALUES(42,'LETTERSTRING','sbidomains.nm.letterstring','PRED_CHECK','Pred Check','sbidomains.ds.letterstring')
INSERT INTO SBI_DOMAINS VALUES(43,'MANDATORY','sbidomains.nm.mandatory','PRED_CHECK','Pred Check','sbidomains.ds.mandatory')
INSERT INTO SBI_DOMAINS VALUES(44,'FISCALCODE','sbidomains.nm.fiscalcode','PRED_CHECK','Pred Check','sbidomains.ds.fiscalcode')
INSERT INTO SBI_DOMAINS VALUES(45,'EMAIL','sbidomains.nm.email','PRED_CHECK','Pred Check','sbidomains.ds.email')
INSERT INTO SBI_DOMAINS VALUES(46,'EXT','sbidomains.nm.ext','ENGINE_TYPE','Engine types','sbidomains.ds.ext')
INSERT INTO SBI_DOMAINS VALUES(47,'INT','sbidomains.nm.int','ENGINE_TYPE','Engine types','sbidomains.ds.int')
INSERT INTO SBI_DOMAINS VALUES(48,'LIST','sbidomains.nm.list','SELECTION_TYPE','Selection modality of parameter values','sbidomains.ds.list')
INSERT INTO SBI_DOMAINS VALUES(49,'CHECK_LIST','sbidomains.nm.check_list','SELECTION_TYPE','Selection modality of parameter values','sbidomains.ds.check_list')
INSERT INTO SBI_DOMAINS VALUES(50,'COMBOBOX','sbidomains.nm.combobox','SELECTION_TYPE','Selection modality of parameter values','sbidomains.ds.combobox')
INSERT INTO SBI_DOMAINS VALUES(51,'-1','sbidomains.nm.default','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.default')
INSERT INTO SBI_DOMAINS VALUES(52,'org.hibernate.dialect.OracleDialect','sbidomains.nm.oracle','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.oracle')
INSERT INTO SBI_DOMAINS VALUES(53,'org.hibernate.dialect.Oracle9Dialect','sbidomains.nm.oracle_9i10g','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.oracle_9i10g')
INSERT INTO SBI_DOMAINS VALUES(54,'org.hibernate.dialect.SQLServerDialect','sbidomains.nm.sqlserver','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.sqlserver')
INSERT INTO SBI_DOMAINS VALUES(55,'org.hibernate.dialect.HSQLDialect','sbidomains.nm.hsql','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.hsql')
INSERT INTO SBI_DOMAINS VALUES(56,'org.hibernate.dialect.MySQLDialect','sbidomains.nm.mysql','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.mysql')
INSERT INTO SBI_DOMAINS VALUES(57,'org.hibernate.dialect.PostgreSQLDialect','sbidomains.nm.postgresql','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.postgresql')
INSERT INTO SBI_DOMAINS VALUES(58,'org.hibernate.dialect.IngresDialect','sbidomains.nm.ingres','DIALECT_HIB','Predefined hibernate dialect','sbidomains.ds.ingres')
INSERT INTO SBI_DOMAINS VALUES(59,'RANGE','sbidomains.nm.range','THRESHOLD_TYPE','Threshold Type','sbidomains.ds.range')
INSERT INTO SBI_DOMAINS VALUES(60,'MINIMUM','sbidomains.nm.minimum','THRESHOLD_TYPE','Threshold Type','sbidomains.ds.minimum')
INSERT INTO SBI_DOMAINS VALUES(61,'MAXIMUM','sbidomains.nm.maximum','THRESHOLD_TYPE','Threshold Type','sbidomains.ds.maximum')
INSERT INTO SBI_DOMAINS VALUES(62,'URGENT','sbidomains.nm.Urgent','SEVERITY','Severity Level','sbidomains.ds.Urgent')
INSERT INTO SBI_DOMAINS VALUES(63,'HIGH','sbidomains.nm.High','SEVERITY','Severity Level','sbidomains.ds.High')
INSERT INTO SBI_DOMAINS VALUES(64,'MEDIUM','sbidomains.nm.Medium','SEVERITY','Severity Level','sbidomains.ds.Medium')
INSERT INTO SBI_DOMAINS VALUES(65,'LOW','sbidomains.nm.Low','SEVERITY','Severity Level','sbidomains.ds.Low')
INSERT INTO SBI_DOMAINS VALUES(66,'CSP','sbidomains.nm.CSP','RESOURCE','Resource type','sbidomains.ds.CSP')
INSERT INTO SBI_DOMAINS VALUES(67,'PROCESS','sbidomains.nm.Process','RESOURCE','Resource type','sbidomains.ds.Process')
INSERT INTO SBI_DOMAINS VALUES(68,'PROJECT','sbidomains.nm.Project','RESOURCE','Resource type','sbidomains.ds.Project')
INSERT INTO SBI_DOMAINS VALUES(69,'SERVICE','sbidomains.nm.Service','RESOURCE','Resource type','sbidomains.ds.Service')
INSERT INTO SBI_DOMAINS VALUES(70,'Meter','sbidomains.nm.Meter','KPI_CHART','Kpi Chart type','sbidomains.ds.Meter')
INSERT INTO SBI_DOMAINS VALUES(71,'SimpleDial','sbidomains.nm.SimpleDial','KPI_CHART','Kpi Chart type','sbidomains.ds.SimpleDial')
INSERT INTO SBI_DOMAINS VALUES(72,'Speedometer','sbidomains.nm.Speedometer','KPI_CHART','Kpi Chart type','sbidomains.ds.Speedometer')
INSERT INTO SBI_DOMAINS VALUES(73,'Thermometer','sbidomains.nm.Thermometer','KPI_CHART','Kpi Chart type','sbidomains.ds.Thermometer')
INSERT INTO SBI_DOMAINS VALUES(74,'BulletGraph','sbidomains.nm.BulletGraph','KPI_CHART','Kpi Chart type','sbidomains.ds.BulletGraph')
INSERT INTO SBI_DOMAINS VALUES(75,'MAIL','sbidomains.nm.Mail','ALARM_MODALITY','Alarm Modality','sbidomains.ds.Mail')
INSERT INTO SBI_DOMAINS VALUES(76,'SMS','sbidomains.nm.SMS','ALARM_MODALITY','Alarm Modality','sbidomains.ds.SMS')
INSERT INTO SBI_DOMAINS VALUES(77,'GENERIC_ROOT','sbidomains.nm.Generic_root','MODEL_ROOT','Model root type','sbidomains.ds.Generic_root')
INSERT INTO SBI_DOMAINS VALUES(78,'GENERIC_NODE','sbidomains.nm.Generic_Node','MODEL_NODE','Model node type','sbidomains.ds.Generic_Node')
INSERT INTO SBI_DOMAINS VALUES(79,'PIVOT_TRANSFOMER','sbidomains.nm.pivot_transformer','TRANSFORMER_TYPE','Transformer types','sbidomains.ds.pivot_transformer')
INSERT INTO SBI_DOMAINS VALUES(80,'Basic','Basic','KPI_TYPE','Kpi Type','')
INSERT INTO SBI_DOMAINS VALUES(81,'Derived','Derived','KPI_TYPE','Kpi Type','')
INSERT INTO SBI_DOMAINS VALUES(82,'Nominal scale','Nominal scale','METRIC_SCALE_TYPE','Metric Scale Type','')
INSERT INTO SBI_DOMAINS VALUES(83,'Ordinal scale','Ordinal scale','METRIC_SCALE_TYPE','Metric Scale Type','')
INSERT INTO SBI_DOMAINS VALUES(84,'Intervals scale','Intervals scale','METRIC_SCALE_TYPE','Metric Scale Type','')
INSERT INTO SBI_DOMAINS VALUES(85,'Ratio scale','Ratio scale','METRIC_SCALE_TYPE','Metric Scale Type','')
INSERT INTO SBI_DOMAINS VALUES(86,'Absolute scale','Absolute scale','METRIC_SCALE_TYPE','Metric Scale Type','')
INSERT INTO SBI_DOMAINS VALUES(87,'COUNT','Count','MEASURE_TYPE','Measure Type','')
INSERT INTO SBI_DOMAINS VALUES(88,'TIME','Time','MEASURE_TYPE','Measure Type','')
INSERT INTO SBI_DOMAINS VALUES(89,'SIZE','Size','MEASURE_TYPE','Measure Type','')
INSERT INTO SBI_DOMAINS VALUES(90,'PDF','PDF','EXPORT_TYPE','Exporters Type','Exporters type')
INSERT INTO SBI_DOMAINS VALUES(91,'XLS','XLS','EXPORT_TYPE','Exporters Type','Exporters type')
INSERT INTO SBI_DOMAINS VALUES(92,'JPG','JPG','EXPORT_TYPE','Exporters Type','Exporters type')
INSERT INTO SBI_DOMAINS VALUES(93,'PPT','PPT','EXPORT_TYPE','Exporters Type','Exporters type')
INSERT INTO SBI_DOMAINS VALUES(96,'CSV','CSV','EXPORT_TYPE','Exporters type','Export type')
INSERT INTO SBI_DOMAINS VALUES(97,'XML','XML','EXPORT_TYPE','Exporters type','Export type')
INSERT INTO SBI_DOMAINS VALUES(98,'TXT','TXT','EXPORT_TYPE','Exporters type','Export type')
INSERT INTO SBI_DOMAINS VALUES(99,'RTF','RTF','EXPORT_TYPE','Exporters type','Export type')
INSERT INTO SBI_DOMAINS VALUES(100,'JRXML','JRXML','EXPORT_TYPE','Exporters type','Export type')
INSERT INTO SBI_DOMAINS VALUES(101,'PERCENTAGE','Percentage','SCALE_TYPE','Scale type',NULL)
INSERT INTO SBI_DOMAINS VALUES(102,'GQM_ROOT','GQM root','MODEL_ROOT','Model root type','')
INSERT INTO SBI_DOMAINS VALUES(103,'Model','sbidomains.nm.Model_Family','UDP_FAMILY','Udp family','')
INSERT INTO SBI_DOMAINS VALUES(104,'Kpi','sbidomains.nm.Model_Family','UDP_FAMILY','Udp family','')
INSERT INTO SBI_DOMAINS VALUES(105,'Boolean','Udp Boolean Type','UDP_TYPE','Udp type','')
INSERT INTO SBI_DOMAINS VALUES(106,'Text','Udp Text Type','UDP_TYPE','Udp type','')
INSERT INTO SBI_DOMAINS VALUES(107,'Integer','Udp Integer Type','UDP_TYPE','Udp type','')
INSERT INTO SBI_ENGINES VALUES(1,0,'Dashboard Internal Engine','Dashboard Internal Engine','',NULL,NULL,NULL,'','DashboardInternalEng',47,'it.eng.spagobi.engines.dashboard.SpagoBIDashboardInternalEngine',8,NULL,TRUE,FALSE)
INSERT INTO SBI_ENGINES VALUES(2,0,'Chart Internal Engine','Chart Internal Engine','',NULL,NULL,NULL,'','ChartInternalEng',47,'it.eng.spagobi.engines.chart.SpagoBIChartInternalEngine',8,NULL,TRUE,FALSE)
INSERT INTO SBI_ENGINES VALUES(3,0,'Dossier Internal Engine','Dossier Internal Engine','',NULL,NULL,NULL,'','DossierInternalEng',47,'it.eng.spagobi.engines.dossier.SpagoBIDossierInternalEngine',11,NULL,FALSE,FALSE)
INSERT INTO SBI_ENGINES VALUES(4,0,'Office Document Internal Engine','Office Document Internal Engine','',NULL,NULL,NULL,'','OfficeInternalEng',47,'it.eng.spagobi.engines.officedocument.SpagoBIOfficeDocumentInternalEngine',12,NULL,FALSE,FALSE)
INSERT INTO SBI_ENGINES VALUES(5,0,'Document Composition Internal Engine','Document Composition Internal Engine','',NULL,NULL,NULL,'','DocumentCompositionInternalEng',47,'it.eng.spagobi.engines.documentcomposition.SpagoBIDocumentCompositionInternalEngine',14,NULL,FALSE,FALSE)
INSERT INTO SBI_ENGINES VALUES(6,0,'KpiEngine','KpiEngine','',NULL,NULL,NULL,'','KpiEngine',47,'it.eng.spagobi.engines.kpi.SpagoBIKpiInternalEngine',15,NULL,FALSE,FALSE)
INSERT INTO SBI_LOV VALUES(101,'Current year format yyyy','CURRENT_YEAR','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString yearStr = year.toString();\u000d\u000areturnValue(yearStr);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current year')
INSERT INTO SBI_LOV VALUES(102,'Current month format mm/yyyy','CURRENT_MONTH','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current month')
INSERT INTO SBI_LOV VALUES(103,'Current date format dd/mm/yyyy','CURRENT_DATE','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint day = now.getDate();\u000d\u000aString dayStr = day.toString();\u000d\u000aif (day < 10) dayStr = ''0'' + dayStr;\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = dayStr + ''/'' + monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current date')
INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS')
INSERT INTO SBI_USER_FUNC VALUES(1,'EnginesManagement','EnginesManagement')
INSERT INTO SBI_USER_FUNC VALUES(2,'FunctionalitiesManagement','FunctionalitiesManagement')
INSERT INTO SBI_USER_FUNC VALUES(3,'LovsManagement','LovsManagement')
INSERT INTO SBI_USER_FUNC VALUES(4,'ConstraintManagement','ConstraintManagement')
INSERT INTO SBI_USER_FUNC VALUES(5,'ParameterManagement','ParameterManagement')
INSERT INTO SBI_USER_FUNC VALUES(6,'DocumentAdministration','DocumentAdministration')
INSERT INTO SBI_USER_FUNC VALUES(7,'DocumentDevManagement','DocumentDevManagement')
INSERT INTO SBI_USER_FUNC VALUES(8,'DocumentTestManagement','DocumentTestManagement')
INSERT INTO SBI_USER_FUNC VALUES(9,'DocumentAdminManagement','DocumentAdminManagement')
INSERT INTO SBI_USER_FUNC VALUES(10,'ImportExportManagement','ImportExportManagement')
INSERT INTO SBI_USER_FUNC VALUES(11,'SchedulerManagement','SchedulerManagement')
INSERT INTO SBI_USER_FUNC VALUES(12,'EventsManagement','EventsManagement')
INSERT INTO SBI_USER_FUNC VALUES(13,'WorkspaceManagement','WorkspaceManagement')
INSERT INTO SBI_USER_FUNC VALUES(14,'WorklistManagement','WorklistManagement')
INSERT INTO SBI_USER_FUNC VALUES(15,'MapCatalogueManagement','MapCatalogueManagement')
INSERT INTO SBI_USER_FUNC VALUES(16,'MapFeaturesManagement','MapFeaturesManagement')
INSERT INTO SBI_USER_FUNC VALUES(17,'DocumentManagement','DocumentManagement')
INSERT INTO SBI_USER_FUNC VALUES(18,'SyncronizeRolesManagement','SyncronizeRolesManagement')
INSERT INTO SBI_USER_FUNC VALUES(19,'ProfileAttributeManagement','ProfileAttributeManagement')
INSERT INTO SBI_USER_FUNC VALUES(20,'DataSourceManagement','DataSourceManagement')
INSERT INTO SBI_USER_FUNC VALUES(21,'DocumentUserManagement','DocumentUserManagement')
INSERT INTO SBI_USER_FUNC VALUES(22,'DocumentDeleteManagement','DocumentDeleteManagement')
INSERT INTO SBI_USER_FUNC VALUES(23,'DocumentStateManagement','DocumentStateManagement')
INSERT INTO SBI_USER_FUNC VALUES(24,'DocumentDetailManagement','DocumentDetailManagement')
INSERT INTO SBI_USER_FUNC VALUES(25,'ViewMyFolderAdmin','ViewMyFolderAdmin')
INSERT INTO SBI_USER_FUNC VALUES(26,'DistributionListUser','DistributionListUser')
INSERT INTO SBI_USER_FUNC VALUES(27,'DistributionListManagement','DistributionListManagement')
INSERT INTO SBI_USER_FUNC VALUES(28,'DocumentMetadataManagement','DocumentMetadataManagement')
INSERT INTO SBI_USER_FUNC VALUES(29,'LovsView','LovsView')
INSERT INTO SBI_USER_FUNC VALUES(30,'ConstraintView','ConstraintView')
INSERT INTO SBI_USER_FUNC VALUES(31,'ParameterView','ParameterView')
INSERT INTO SBI_USER_FUNC VALUES(32,'DatasetManagement','DatasetManagement')
INSERT INTO SBI_USER_FUNC VALUES(33,'DocumentMoveDownState','DocumentMoveDownState')
INSERT INTO SBI_USER_FUNC VALUES(34,'DocumentMoveUpState','DocumentMoveUpState')
INSERT INTO SBI_USER_FUNC VALUES(35,'ModifyRefresh','ModifyRefresh')
INSERT INTO SBI_USER_FUNC VALUES(36,'MenuManagement','MenuManagement')
INSERT INTO SBI_USER_FUNC VALUES(37,'HotLinkManagement','HotLinkManagement')
INSERT INTO SBI_USER_FUNC VALUES(38,'KpiManagement','KpiManagement')
INSERT INTO SBI_USER_FUNC VALUES(39,'ObjMetadataManagement','ObjMetadataManagement')
INSERT INTO SBI_USER_FUNC VALUES(40,'ProfileManagement', 'ProfileManagement')
INSERT INTO SBI_USER_FUNC VALUES(41,'UserDefinedPropertyManagement', 'UserDefinedPropertyManagement')

INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,1)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,2)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,3)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,3)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,4)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,4)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,5)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,5)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,6)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,7)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,7)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,8)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,8)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,9)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,10)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,11)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,13)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,13)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,15)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,15)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,16)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,16)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,17)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,17)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,18)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,19)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,19)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,20)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,21)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,21)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,21)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,22)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,22)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,23)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,24)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,24)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,25)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,27)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,27)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,28)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,28)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,28)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,28)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,29)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,29)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,29)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,30)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,30)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,30)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,31)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,31)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,31)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,32)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,32)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,33)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,33)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,34)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,34)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,34)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,35)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,36)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(22,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(25,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(24,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,38)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(26,38)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,39)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,40)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(23,41)

INSERT INTO SBI_AUDIT VALUES(1027,'biadmin','/spagobi/admin',58,58,'TEST_CROSS_OLAP','Report Cross Olap','REPORT','REL','family=Food',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 16:05:18.781000000','2009-10-15 16:05:21.203000000','2009-10-15 16:05:24.718000000',3,'EXECUTION_FAILED',1,'net.sf.jasperreports.engine.JRException: Errors were encountered when compiling report expressions class file:\u000a1. Only a type can be imported. it.businesslogic.ireport.IReportScriptlet resolves to a package\u000aimport it.businesslogic.ireport.IReportScriptlet;\u000a       <--------------------------------------->\u000a1 errors\u000a',NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1028,'biuser','/spagobi/user',25,25,'KPI_RETAIL_ANALYSIS','Retail Analysis','KPI','REL','ParKpiMonth=1',NULL,NULL,NULL,NULL,NULL,6,6,'KpiEngine','KpiEngine','INT',NULL,NULL,'it.eng.spagobi.engines.kpi.SpagoBIKpiInternalEngine','2009-10-15 16:05:55.109000000','2009-10-15 16:05:55.125000000','2009-10-15 16:05:57.281000000',2,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1029,'biadmin','/spagobi/admin',58,58,'TEST_CROSS_OLAP','Report Cross Olap','REPORT','REL','family=Food',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 16:07:03.640000000','2009-10-15 16:07:03.906000000','2009-10-15 16:07:04.125000000',0,'EXECUTION_FAILED',1,'net.sf.jasperreports.engine.JRException: Errors were encountered when compiling report expressions class file:\u000a1. Only a type can be imported. it.businesslogic.ireport.IReportScriptlet resolves to a package\u000aimport it.businesslogic.ireport.IReportScriptlet;\u000a       <--------------------------------------->\u000a1 errors\u000a',NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1030,'biadmin','/spagobi/admin',58,58,'TEST_CROSS_OLAP','Report Cross Olap','REPORT','REL','family=Food',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 16:07:25.312000000','2009-10-15 16:07:25.453000000','2009-10-15 16:07:25.671000000',0,'EXECUTION_FAILED',1,'net.sf.jasperreports.engine.JRException: Errors were encountered when compiling report expressions class file:\u000a1. Only a type can be imported. it.businesslogic.ireport.IReportScriptlet resolves to a package\u000aimport it.businesslogic.ireport.IReportScriptlet;\u000a       <--------------------------------------->\u000a1 errors\u000a',NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1031,'biadmin','/spagobi/admin',62,62,'BestByRegion','Best By Region','REPORT','REL','region=CenterEast',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 16:09:00.250000000','2009-10-15 16:09:01.343000000','2009-10-15 16:09:03.359000000',2,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1032,'biadmin','/spagobi/admin',56,56,'olapCrossQBE','Olap over Foodmart cross QBE','OLAP','REL','',NULL,NULL,NULL,NULL,NULL,9,9,'JPivot-Mondrian','JPivot-Mondrian','EXT','http://localhost:8080/SpagoBIJPivotEngine/JPivotServlet','it.eng.spagobi.engines.drivers.jpivot.JPivotDriver',NULL,'2009-10-15 16:24:39.515000000','2009-10-15 16:24:40.703000000','2009-10-15 16:24:41.359000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1033,'biadmin','/spagobi/admin',54,54,'qbeWithParam','Qbe over Foodmart whit param','DATAMART','REL','family=',8,8,'prodFamily','biadmin',1,10,10,'Qbe','Qbe','EXT','http://localhost:8080/SpagoBIQbeEngine/servlet/AdapterHTTP','it.eng.spagobi.engines.drivers.qbe.QbeDriver',NULL,'2009-10-15 16:33:01.609000000','2009-10-15 16:33:05.765000000',NULL,NULL,'EXECUTION_STARTED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1034,'biadmin','/spagobi/admin',21,21,'GEO_NUM_STORES','Regions Map with number of stores','MAP','REL','',NULL,NULL,NULL,NULL,NULL,11,11,'GeoEngine','GeoEngine','EXT','http://localhost:8080/SpagoBIGeoEngine/servlet/AdapterHTTP','it.eng.spagobi.engines.drivers.geo.GeoDriver',NULL,'2009-10-15 16:53:27.140000000','2009-10-15 16:53:39.310000000','2009-10-15 16:53:48.218000000',9,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1035,'biadmin','/spagobi/admin',62,62,'BestByRegion','Best By Region','REPORT','REL','region=CenterWest',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 16:53:59.734000000','2009-10-15 16:54:07.0','2009-10-15 16:54:10.250000000',3,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1036,'biadmin','/spagobi/admin',22,22,'GEO_SUPPLY_CHAIN','Geo supply chain map','MAP','REL','',NULL,NULL,NULL,NULL,NULL,11,11,'GeoEngine','GeoEngine','EXT','http://localhost:8080/SpagoBIGeoEngine/servlet/AdapterHTTP','it.eng.spagobi.engines.drivers.geo.GeoDriver',NULL,'2009-10-15 16:54:27.640000000','2009-10-15 16:54:28.640000000',NULL,NULL,'EXECUTION_STARTED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1037,'biadmin','/spagobi/admin',22,22,'GEO_SUPPLY_CHAIN','Geo supply chain map','MAP','REL','',NULL,NULL,NULL,NULL,NULL,11,11,'GeoEngine','GeoEngine','EXT','http://localhost:8080/SpagoBIGeoEngine/servlet/AdapterHTTP','it.eng.spagobi.engines.drivers.geo.GeoDriver',NULL,'2009-10-15 16:54:56.875000000','2009-10-15 16:54:57.796000000',NULL,NULL,'EXECUTION_STARTED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1038,'biuser','/spagobi/user',25,25,'KPI_RETAIL_ANALYSIS','Retail Analysis','KPI','REL','ParKpiMonth=1',NULL,NULL,NULL,NULL,NULL,6,6,'KpiEngine','KpiEngine','INT',NULL,NULL,'it.eng.spagobi.engines.kpi.SpagoBIKpiInternalEngine','2009-10-15 17:08:51.984000000','2009-10-15 17:08:51.984000000','2009-10-15 17:08:52.656000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1039,'biuser','/spagobi/user',19,19,'DC_FOODMART','Composed Document over Foodmart','DOCUMENT_COMPOSITE','REL','',NULL,NULL,NULL,NULL,NULL,5,5,'DocumentCompositionInternalEng','Document Composition Internal Engine','INT',NULL,NULL,'it.eng.spagobi.engines.documentcomposition.SpagoBIDocumentCompositionInternalEngine','2009-10-15 17:10:57.620000000','2009-10-15 17:10:57.620000000','2009-10-15 17:10:57.140000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1040,'biuser','/spagobi/user',19,19,'DC_FOODMART','Composed Document over Foodmart','DOCUMENT_COMPOSITE','REL','',NULL,NULL,NULL,NULL,NULL,5,5,'DocumentCompositionInternalEng','Document Composition Internal Engine','INT',NULL,NULL,'it.eng.spagobi.engines.documentcomposition.SpagoBIDocumentCompositionInternalEngine','2009-10-15 17:10:57.109000000','2009-10-15 17:11:18.234000000','2009-10-15 17:11:27.828000000',9,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1041,'biuser','/spagobi/user',19,19,'DC_FOODMART','Composed Document over Foodmart','DOCUMENT_COMPOSITE','REL','',NULL,NULL,NULL,NULL,NULL,5,5,'DocumentCompositionInternalEng','Document Composition Internal Engine','INT',NULL,NULL,'it.eng.spagobi.engines.documentcomposition.SpagoBIDocumentCompositionInternalEngine','2009-10-15 17:10:57.125000000','2009-10-15 17:11:03.828000000','2009-10-15 17:11:17.234000000',13,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1042,'biuser','/spagobi/user',5,5,'CHR_WATERFALL1','Chart Waterfall for Composite Document','DASH','REL','State=%&Department=%',NULL,NULL,NULL,NULL,NULL,2,2,'ChartInternalEng','Chart Internal Engine','INT',NULL,NULL,'it.eng.spagobi.engines.chart.SpagoBIChartInternalEngine','2009-10-15 17:11:17.421000000','2009-10-15 17:11:29.875000000','2009-10-15 17:11:29.890000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'DOCUMENT_COMPOSITION')
INSERT INTO SBI_AUDIT VALUES(1043,'biuser','/spagobi/user',6,6,'CHR_WATERFALL2','Chart Waterfall 2 for Composite Document','DASH','REL','State=%&Department=%&SubCategory=Fresh Vegetables',NULL,NULL,NULL,NULL,NULL,2,2,'ChartInternalEng','Chart Internal Engine','INT',NULL,NULL,'it.eng.spagobi.engines.chart.SpagoBIChartInternalEngine','2009-10-15 17:11:25.906000000','2009-10-15 17:11:29.828000000','2009-10-15 17:11:29.859000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'DOCUMENT_COMPOSITION')
INSERT INTO SBI_AUDIT VALUES(1044,'biuser','/spagobi/user',21,21,'GEO_NUM_STORES','Regions Map with number of stores','MAP','REL','',NULL,NULL,NULL,NULL,NULL,11,11,'GeoEngine','GeoEngine','EXT','http://localhost:8080/SpagoBIGeoEngine/servlet/AdapterHTTP','it.eng.spagobi.engines.drivers.geo.GeoDriver',NULL,'2009-10-15 17:13:13.171000000','2009-10-15 17:13:14.468000000','2009-10-15 17:13:15.671000000',1,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_AUDIT VALUES(1045,'biuser','/spagobi/user',62,62,'BestByRegion','Best By Region','REPORT','REL','region=CenterWest',NULL,NULL,NULL,NULL,NULL,7,7,'JasperReport','JasperReport','EXT','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','it.eng.spagobi.engines.drivers.jasperreport.JasperReportDriver',NULL,'2009-10-15 17:14:47.937000000','2009-10-15 17:14:48.250000000','2009-10-15 17:14:48.921000000',0,'EXECUTION_PERFORMED',0,NULL,NULL,'NORMAL_EXECUTION_MODALITY')
INSERT INTO SBI_KPI_PERIODICITY VALUES(1,'month',1,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12.0')
INSERT INTO SBI_KPI_PERIODICITY VALUES(2,'day',NULL,1,NULL,NULL,NULL,'2009-01-15 17:52:12.0')
INSERT INTO SBI_KPI_PERIODICITY VALUES(3,'hour',NULL,NULL,1,NULL,NULL,'2009-01-15 17:52:12.0')
INSERT INTO SBI_KPI_PERIODICITY VALUES(4,'minute',NULL,NULL,NULL,1,NULL,'2009-01-15 17:52:12.0')
INSERT INTO SBI_KPI_PERIODICITY VALUES(5,'year',12,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12.0')
INSERT INTO SBI_KPI_PERIODICITY VALUES(6,'2 months',2,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12.0')

