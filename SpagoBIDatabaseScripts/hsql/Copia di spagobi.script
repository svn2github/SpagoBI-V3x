CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE SBI_CHECKS(CHECK_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,VALUE_TYPE_CD VARCHAR,VALUE_TYPE_ID INTEGER,VALUE_1 VARCHAR,VALUE_2 VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_CHECKS PRIMARY KEY(CHECK_ID))
CREATE MEMORY TABLE SBI_DOMAINS(VALUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 200) NOT NULL,VALUE_CD VARCHAR,VALUE_NM VARCHAR,DOMAIN_CD VARCHAR,DOMAIN_NM VARCHAR,VALUE_DS VARCHAR,CONSTRAINT XPKSBI_DOMAINS PRIMARY KEY(VALUE_ID))
CREATE MEMORY TABLE SBI_ENGINES(ENGINE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENCRYPT SMALLINT,NAME VARCHAR,DESCR VARCHAR,MAIN_URL VARCHAR,SECN_URL VARCHAR,OBJ_UPL_DIR VARCHAR,OBJ_USE_DIR VARCHAR,DRIVER_NM VARCHAR,LABEL VARCHAR,ENGINE_TYPE INTEGER,CLASS_NM VARCHAR,BIOBJ_TYPE INTEGER,DEFAULT_DS_ID INTEGER, USE_DATASET BOOLEAN, USE_DATASOURCE BOOLEAN, CONSTRAINT XPKSBI_ENGINES PRIMARY KEY(ENGINE_ID),CONSTRAINT FK_SBI_ENGINES_1 FOREIGN KEY(BIOBJ_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_ENGINES_2 FOREIGN KEY(ENGINE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_EXT_ROLES(EXT_ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,CODE VARCHAR,ROLE_TYPE_CD VARCHAR,ROLE_TYPE_ID INTEGER,SAVE_SUBOBJECTS BOOLEAN DEFAULT TRUE,SEE_SUBOBJECTS BOOLEAN DEFAULT TRUE,SEE_VIEWPOINTS BOOLEAN DEFAULT TRUE,SEE_SNAPSHOTS BOOLEAN DEFAULT TRUE,SEE_NOTES BOOLEAN DEFAULT TRUE,SEND_MAIL BOOLEAN DEFAULT TRUE,SAVE_INTO_FOLDER BOOLEAN DEFAULT TRUE,SAVE_REMEMBER_ME BOOLEAN DEFAULT TRUE,SEE_METADATA BOOLEAN DEFAULT TRUE,BUILD_QBE_QUERY BOOLEAN DEFAULT TRUE,CONSTRAINT XPKSBI_EXT_ROLES PRIMARY KEY(EXT_ROLE_ID),CONSTRAINT FK_SBI_EXT_ROLES_1 FOREIGN KEY(ROLE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_FUNC_ROLE(ROLE_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,STATE_CD VARCHAR,STATE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_FUNC_ROLE PRIMARY KEY(FUNCT_ID,STATE_ID,ROLE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_FUNCTIONS(FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCT_TYPE_CD VARCHAR,PARENT_FUNCT_ID INTEGER,NAME VARCHAR,DESCR VARCHAR,PATH VARCHAR,CODE VARCHAR,PROG INTEGER NOT NULL,FUNCT_TYPE_ID INTEGER,CONSTRAINT XPKSBI_FUNCTIONS PRIMARY KEY(FUNCT_ID),CONSTRAINT FK_SBI_FUNCTIONS_1 FOREIGN KEY(FUNCT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNCTIONS_2 FOREIGN KEY(PARENT_FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_LOV(LOV_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,INPUT_TYPE_CD VARCHAR,DEFAULT_VAL VARCHAR,LOV_PROVIDER VARCHAR,INPUT_TYPE_ID INTEGER,PROFILE_ATTR VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_LOV PRIMARY KEY(LOV_ID),CONSTRAINT FK_SBI_LOV_1 FOREIGN KEY(INPUT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJ_FUNC(BIOBJ_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_OBJ_FUNC PRIMARY KEY(BIOBJ_ID,FUNCT_ID),CONSTRAINT FK_SBI_OBJ_FUNC_1 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_OBJ_PAR(PAR_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL,LABEL VARCHAR,REQ_FL SMALLINT,MOD_FL SMALLINT,VIEW_FL SMALLINT,MULT_FL SMALLINT,PROG INTEGER NOT NULL,PARURL_NM VARCHAR,OBJ_PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,PRIORITY INTEGER,CONSTRAINT XPKSBI_OBJ_PAR PRIMARY KEY(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_OBJ_STATE(BIOBJ_ID INTEGER NOT NULL,STATE_ID INTEGER NOT NULL,END_DT DATE,START_DT DATE NOT NULL,NOTE VARCHAR,CONSTRAINT XPKSBI_OBJ_STATE PRIMARY KEY(BIOBJ_ID,STATE_ID,START_DT),CONSTRAINT FK_SBI_OBJ_STATE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJECTS(BIOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENGINE_ID INTEGER,DESCR VARCHAR,LABEL VARCHAR,ENCRYPT SMALLINT,PATH VARCHAR,REL_NAME VARCHAR,STATE_ID INTEGER,STATE_CD VARCHAR,BIOBJ_TYPE_CD VARCHAR,BIOBJ_TYPE_ID INTEGER,SCHED_FL SMALLINT,EXEC_MODE_ID INTEGER,STATE_CONS_ID INTEGER,EXEC_MODE_CD VARCHAR,STATE_CONS_CD VARCHAR,NAME VARCHAR,VISIBLE SMALLINT,UUID VARCHAR,DATA_SOURCE_ID INTEGER,  DATA_SET_ID INTEGER, DESCR_EXT VARCHAR,OBJECTIVE VARCHAR,KEYWORDS	VARCHAR,LANGUAGE VARCHAR,CREATION_DATE TIMESTAMP,CREATION_USER VARCHAR, REFRESH_SECONDS INTEGER, PROF_VISIBILITY VARCHAR(400) NULL, CONSTRAINT XPKSBI_OBJECTS PRIMARY KEY(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECTS_1 FOREIGN KEY(STATE_CONS_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_3 FOREIGN KEY(BIOBJ_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_4 FOREIGN KEY(EXEC_MODE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_5 FOREIGN KEY(ENGINE_ID) REFERENCES SBI_ENGINES(ENGINE_ID))
CREATE MEMORY TABLE SBI_OBJECTS_RATING (USER_ID VARCHAR(127) NOT NULL, OBJ_ID INTEGER NOT NULL,RATING INTEGER NOT NULL,CONSTRAINT XPKSBI_OBJECTS_RATING PRIMARY KEY (USER_ID, OBJ_ID), CONSTRAINT FK_SBI_OBJECTS_RATING_1 FOREIGN KEY  (OBJ_ID) REFERENCES SBI_OBJECTS (BIOBJ_ID) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE MEMORY TABLE SBI_PARAMETERS(PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCTIONAL_FLAG SMALLINT DEFAULT 1 NOT NULL,TEMPORAL_FLAG SMALLINT DEFAULT 0 NOT NULL,DESCR VARCHAR,LENGTH SMALLINT,LABEL VARCHAR,PAR_TYPE_CD VARCHAR,MASK VARCHAR,PAR_TYPE_ID INTEGER,NAME VARCHAR,CONSTRAINT XPKSBI_PARAMETERS PRIMARY KEY(PAR_ID),CONSTRAINT FK_SBI_PARAMETERS_1 FOREIGN KEY(PAR_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_PARUSE(USE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,LOV_ID INTEGER,LABEL VARCHAR,DESCR VARCHAR,PAR_ID INTEGER,NAME VARCHAR,MAN_IN INTEGER,SELECTION_TYPE VARCHAR DEFAULT 'LIST',MULTIVALUE_FLAG SMALLINT DEFAULT 0,CONSTRAINT XPKSBI_PARUSE PRIMARY KEY(USE_ID),CONSTRAINT FK_SBI_PARUSE_2 FOREIGN KEY(LOV_ID) REFERENCES SBI_LOV(LOV_ID),CONSTRAINT FK_SBI_PARUSE_1 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID))
CREATE MEMORY TABLE SBI_PARUSE_CK(CHECK_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_PARUSE_CK PRIMARY KEY(USE_ID,CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_2 FOREIGN KEY(CHECK_ID) REFERENCES SBI_CHECKS(CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_PARUSE_DET(EXT_ROLE_ID INTEGER NOT NULL,PROG INTEGER,USE_ID INTEGER NOT NULL,HIDDEN_FL SMALLINT,DEFAULT_VAL VARCHAR,CONSTRAINT XPKSBI_PARUSE_DET PRIMARY KEY(USE_ID,EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_2 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_SUBREPORTS(MASTER_RPT_ID INTEGER NOT NULL,SUB_RPT_ID INTEGER NOT NULL,PRIMARY KEY(MASTER_RPT_ID,SUB_RPT_ID),CONSTRAINT FK_SBI_SUBREPORTS_1 FOREIGN KEY(MASTER_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SUBREPORTS_2 FOREIGN KEY(SUB_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_OBJ_PARUSE(OBJ_PAR_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,OBJ_PAR_FATHER_ID INTEGER NOT NULL,FILTER_OPERATION VARCHAR NOT NULL,PROG INTEGER NOT NULL,FILTER_COLUMN VARCHAR NOT NULL,PRE_CONDITION VARCHAR,POST_CONDITION VARCHAR,LOGIC_OPERATOR VARCHAR,CONSTRAINT XPKSBI_OBJ_PARUSE PRIMARY KEY(OBJ_PAR_ID,USE_ID,OBJ_PAR_FATHER_ID,FILTER_OPERATION),CONSTRAINT FK_SBI_OBJ_PARUSE_1 FOREIGN KEY(OBJ_PAR_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_2 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_3 FOREIGN KEY(OBJ_PAR_FATHER_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,CONSTRAINT XPKSBI_EVENTS PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_LOG(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,EVENT_DATE TIMESTAMP DEFAULT NOW NOT NULL,DESCR VARCHAR NOT NULL,PARAMS VARCHAR,HANDLER VARCHAR DEFAULT 'it.eng.spagobi.events.handlers.DefaultEventPresentationHandler' NOT NULL,CONSTRAINT XPKSBI_EVENTS_LOG PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_ROLES(EVENT_ID INTEGER NOT NULL,ROLE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_EVENTS_ROLES PRIMARY KEY(EVENT_ID,ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_2 FOREIGN KEY(EVENT_ID) REFERENCES SBI_EVENTS_LOG(ID))
CREATE MEMORY TABLE SBI_AUDIT(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USERNAME VARCHAR NOT NULL,USERGROUP VARCHAR,DOC_REF INTEGER,DOC_ID INTEGER,DOC_LABEL VARCHAR NOT NULL,DOC_NAME VARCHAR NOT NULL,DOC_TYPE VARCHAR NOT NULL,DOC_STATE VARCHAR NOT NULL,DOC_PARAMETERS VARCHAR,SUBOBJ_REF INTEGER,SUBOBJ_ID INTEGER,SUBOBJ_NAME VARCHAR(50),SUBOBJ_OWNER VARCHAR(50),SUBOBJ_ISPUBLIC SMALLINT NULL,ENGINE_REF INTEGER,ENGINE_ID INTEGER,ENGINE_LABEL VARCHAR NOT NULL,ENGINE_NAME VARCHAR NOT NULL,ENGINE_TYPE VARCHAR NOT NULL,ENGINE_URL VARCHAR,ENGINE_DRIVER VARCHAR,ENGINE_CLASS VARCHAR,REQUEST_TIME TIMESTAMP NOT NULL,EXECUTION_START TIMESTAMP,EXECUTION_END TIMESTAMP,EXECUTION_TIME INTEGER,EXECUTION_STATE VARCHAR,ERROR SMALLINT,ERROR_MESSAGE VARCHAR,ERROR_CODE VARCHAR,EXECUTION_MODALITY VARCHAR,CONSTRAINT FK_SBI_AUDIT_1 FOREIGN KEY(DOC_REF) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE SET NULL,CONSTRAINT FK_SBI_AUDIT_2 FOREIGN KEY(ENGINE_REF) REFERENCES SBI_ENGINES(ENGINE_ID) ON DELETE SET NULL,CONSTRAINT FK_SBI_AUDIT_3 FOREIGN KEY(SUBOBJ_REF) REFERENCES SBI_SUBOBJECTS(SUBOBJ_ID) ON DELETE SET NULL)
CREATE MEMORY TABLE QRTZ_JOB_DETAILS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,DESCRIPTION VARCHAR(120),JOB_CLASS_NAME VARCHAR(128) NOT NULL,IS_DURABLE VARCHAR(1) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,IS_STATEFUL VARCHAR(1) NOT NULL,REQUESTS_RECOVERY VARCHAR(1) NOT NULL,JOB_DATA BINARY,PRIMARY KEY(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,JOB_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(JOB_NAME,JOB_GROUP,JOB_LISTENER),CONSTRAINT SYS_FK_47 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,DESCRIPTION VARCHAR(120),NEXT_FIRE_TIME NUMERIC(13),PREV_FIRE_TIME NUMERIC(13),PRIORITY INTEGER,TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME NUMERIC(13) NOT NULL,END_TIME NUMERIC(13),CALENDAR_NAME VARCHAR(80),MISFIRE_INSTR NUMERIC(2),JOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_51 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,REPEAT_COUNT NUMERIC(7) NOT NULL,REPEAT_INTERVAL NUMERIC(12) NOT NULL,TIMES_TRIGGERED NUMERIC(7) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_55 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,CRON_EXPRESSION VARCHAR(80) NOT NULL,TIME_ZONE_ID VARCHAR(80),PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_59 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,BLOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_63 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,TRIGGER_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),CONSTRAINT SYS_FK_67 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CALENDARS(CALENDAR_NAME VARCHAR(80) NOT NULL PRIMARY KEY,CALENDAR BINARY NOT NULL)
CREATE MEMORY TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP VARCHAR(80) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID VARCHAR(95) NOT NULL PRIMARY KEY,TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,INSTANCE_NAME VARCHAR(80) NOT NULL,FIRED_TIME NUMERIC(13) NOT NULL,PRIORITY INTEGER NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(80),JOB_GROUP VARCHAR(80),IS_STATEFUL VARCHAR(1),REQUESTS_RECOVERY VARCHAR(1))
CREATE MEMORY TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME VARCHAR(80) NOT NULL PRIMARY KEY,LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,CHECKIN_INTERVAL NUMERIC(13) NOT NULL)
CREATE MEMORY TABLE QRTZ_LOCKS(LOCK_NAME VARCHAR(40) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE SBI_GEO_MAPS(MAP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,URL VARCHAR,FORMAT VARCHAR,BIN_ID INTEGER,CONSTRAINT XPKSBI_MAPS PRIMARY KEY(MAP_ID),CONSTRAINT FK_SBI_GEO_MAPS_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_GEO_FEATURES(FEATURE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,TYPE VARCHAR,CONSTRAINT XPKSBI_FEATURES PRIMARY KEY(FEATURE_ID))
CREATE MEMORY TABLE SBI_GEO_MAP_FEATURES(MAP_ID INTEGER NOT NULL,FEATURE_ID INTEGER NOT NULL,SVG_GROUP VARCHAR,VISIBLE_FLAG VARCHAR,CONSTRAINT XPKSBI_GEO_MAP_FEATURES PRIMARY KEY(MAP_ID,FEATURE_ID),CONSTRAINT FK_SBI_GEO_MAP_FEATURES_1 FOREIGN KEY(MAP_ID) REFERENCES SBI_GEO_MAPS(MAP_ID),CONSTRAINT FK_SBI_GEO_MAP_FEATURES_2 FOREIGN KEY(FEATURE_ID) REFERENCES SBI_GEO_FEATURES(FEATURE_ID))
CREATE MEMORY TABLE SBI_VIEWPOINTS(VP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER NOT NULL,VP_OWNER VARCHAR,VP_NAME VARCHAR NOT NULL,VP_DESC VARCHAR,VP_SCOPE VARCHAR NOT NULL,VP_VALUE_PARAMS VARCHAR,VP_CREATION_DATE TIMESTAMP DEFAULT NOW NOT NULL,CONSTRAINT XPKSBI_VIEWPOINTS PRIMARY KEY(VP_ID),CONSTRAINT FK_SBI_VIEWPOINTS_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_DATA_SOURCE(DS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR NOT NULL,JNDI VARCHAR,URL_CONNECTION VARCHAR,USERNAME VARCHAR,PWD VARCHAR,DRIVER VARCHAR,DIALECT_ID INTEGER NOT NULL,MULTI_SCHEMA BOOLEAN DEFAULT FALSE,ATTR_SCHEMA VARCHAR(45) DEFAULT NULL ,CONSTRAINT XPKSBI_DATA_SOURCE PRIMARY KEY(DS_ID),CONSTRAINT FK_SBI_DATA_SOURCE_1 FOREIGN KEY(DIALECT_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_BINARY_CONTENTS(BIN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIN_CONTENT LONGVARBINARY,CONSTRAINT XPKSBI_BINARY_CONTENTS PRIMARY KEY(BIN_ID))
CREATE MEMORY TABLE SBI_OBJECT_TEMPLATES(OBJ_TEMP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR,PROG INTEGER NOT NULL,CREATION_DATE TIMESTAMP,ACTIVE BOOLEAN,DIMENSION VARCHAR,CREATION_USER VARCHAR,CONSTRAINT XPKSBI_OBJECT_TEMPLATES PRIMARY KEY(OBJ_TEMP_ID),CONSTRAINT FK_SBI_OBJECT_TEMPLATES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECT_TEMPLATES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_OBJECT_NOTES(OBJ_NOTE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,EXEC_REQ VARCHAR(500),CONSTRAINT XPKSBI_OBJECT_NOTES PRIMARY KEY(OBJ_NOTE_ID),CONSTRAINT FK_SBI_OBJECT_NOTES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECT_NOTES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_SUBOBJECTS(SUBOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR(40),DESCRIPTION VARCHAR(80),OWNER VARCHAR(40),ISPUBLIC BOOLEAN,CREATION_DATE TIMESTAMP,LAST_CHANGE_DATE TIMESTAMP,CONSTRAINT XPKSBI_SUBOBJECT PRIMARY KEY(SUBOBJ_ID),CONSTRAINT FK_SBI_SUBOBJECT_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SUBOBJECT_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_SNAPSHOTS(SNAP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR(100),DESCRIPTION VARCHAR(1000),CREATION_DATE TIMESTAMP,CONSTRAINT XPKSBI_SNAPSHOT PRIMARY KEY(SNAP_ID),CONSTRAINT FK_SBI_SNAPSHOT_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SNAPSHOT_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_USER_FUNC(USER_FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR(50) NOT NULL,DESCRIPTION VARCHAR(100) NOT NULL,CONSTRAINT XPKSBI_USER_FUNC PRIMARY KEY(USER_FUNCT_ID))
CREATE MEMORY TABLE SBI_ROLE_TYPE_USER_FUNC(ROLE_TYPE_ID INTEGER NOT NULL,USER_FUNCT_ID INTEGER NOT NULL,CONSTRAINT FK_SBI_ROLE_TYPE_USER_FUNC_1 FOREIGN KEY(ROLE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_ROLE_TYPE_USER_FUNC_2 FOREIGN KEY(USER_FUNCT_ID) REFERENCES SBI_USER_FUNC(USER_FUNCT_ID))
CREATE MEMORY TABLE SBI_DOSSIER_PRES(PRESENTATION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,WORKFLOW_PROCESS_ID BIGINT,BIOBJ_ID INTEGER,BIN_ID INTEGER,NAME VARCHAR,PROG INTEGER,CREATION_DATE TIMESTAMP,APPROVED SMALLINT,CONSTRAINT XPKSBI_DOSSIER_PRES PRIMARY KEY(PRESENTATION_ID),CONSTRAINT FK_SBI_DOSSIER_PRES_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_DOSSIER_PRES_1 FOREIGN KEY(BIN_ID) REFERENCES SBI_BINARY_CONTENTS(BIN_ID))
CREATE MEMORY TABLE SBI_DOSSIER_TEMP(PART_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,WORKFLOW_PROCESS_ID BIGINT,BIOBJ_ID INTEGER,PAGE_ID INTEGER,CONSTRAINT XPKSBI_DOSSIER_TEMP PRIMARY KEY(PART_ID),CONSTRAINT FK_SBI_DOSSIER_TEMP_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_DOSSIER_BIN_TEMP(BIN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,PART_ID INTEGER,NAME VARCHAR,BIN_CONTENT LONGVARBINARY,TYPE VARCHAR,CREATION_DATE TIMESTAMP,CONSTRAINT XPKSBI_DOSSIER_BIN_TEMP PRIMARY KEY(BIN_ID),CONSTRAINT FK_SBI_DOSSIER_BIN_TEMP_1 FOREIGN KEY(PART_ID) REFERENCES SBI_DOSSIER_TEMP(PART_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE SBI_REMEMBER_ME (ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR(50) NOT NULL,DESCRIPTION VARCHAR, USERNAME VARCHAR(40) NOT NULL,BIOBJ_ID INTEGER NOT NULL,SUBOBJ_ID INTEGER NULL,PARAMETERS VARCHAR,CONSTRAINT XPKSBI_REMEMBER_ME PRIMARY KEY(ID),CONSTRAINT FK_SBI_REMEMBER_ME_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE CASCADE,CONSTRAINT FK_SBI_REMEMBER_ME_2 FOREIGN KEY(SUBOBJ_ID) REFERENCES SBI_SUBOBJECTS(SUBOBJ_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE SBI_DATA_SET (DS_ID INTEGER GENERATED  BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL, DESCR	VARCHAR(160), LABEL VARCHAR(50) NOT NULL, NAME VARCHAR(50) NOT NULL, FILE_NAME	VARCHAR(300), QUERY VARCHAR, JCLASS_NAME   VARCHAR(100),SCRIPT VARCHAR,ADRESS  VARCHAR(250), EXECUTOR_CLASS VARCHAR(250), PARAMS  VARCHAR(1000), DATA_SOURCE_ID INTEGER, OBJECT_TYPE   VARCHAR(50), OPERATION VARCHAR(50), TRANSFORMER_ID INTEGER, PIVOT_COLUMN VARCHAR(50),PIVOT_ROW VARCHAR(50),PIVOT_VALUE VARCHAR(50), num_rows boolean default false, LANGUAGE_SCRIPT VARCHAR(50), CONSTRAINT XPKSBI_DATA_SET PRIMARY KEY(DS_ID), CONSTRAINT FK_SBI_DATA_SET_1 FOREIGN KEY(TRANSFORMER_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_MENU(MENU_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL, NAME VARCHAR, DESCR VARCHAR, PARENT_ID INTEGER DEFAULT 0, BIOBJ_ID INTEGER, VIEW_ICONS BOOLEAN, HIDE_TOOLBAR BOOLEAN, HIDE_SLIDERS BOOLEAN, STATIC_PAGE VARCHAR, BIOBJ_PARAMETERS VARCHAR NULL, SUBOBJ_NAME VARCHAR NULL, SNAPSHOT_NAME VARCHAR NULL, SNAPSHOT_HISTORY INTEGER NULL, FUNCTIONALITY VARCHAR, INITIAL_PATH VARCHAR, PROG INTEGER DEFAULT 1 NOT NULL, CONSTRAINT XPKSBI_MENU PRIMARY KEY(MENU_ID))
CREATE MEMORY TABLE SBI_MENU_ROLE(MENU_ID INTEGER NOT NULL, EXT_ROLE_ID INTEGER NOT NULL, CONSTRAINT XPKSBI_MENU_ROLE PRIMARY KEY(MENU_ID,EXT_ROLE_ID), CONSTRAINT FK_SBI_MENU_ROLE_1 FOREIGN KEY(MENU_ID) REFERENCES SBI_MENU(MENU_ID), CONSTRAINT FK_SBI_MENU_ROLE_2 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_DIST_LIST(DL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL, NAME VARCHAR(40) NOT NULL, DESCR	VARCHAR(160),  PRIMARY KEY (DL_ID))
CREATE MEMORY TABLE SBI_DIST_LIST_USER(DLU_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL, LIST_ID INTEGER NOT NULL, USER_ID VARCHAR(40) NOT NULL, E_MAIL VARCHAR(70) NOT NULL, PRIMARY KEY (DLU_ID), CONSTRAINT FK_SBI_DIST_LIST_USER_1 FOREIGN KEY(LIST_ID) REFERENCES SBI_DIST_LIST(DL_ID))
CREATE MEMORY TABLE SBI_DIST_LIST_OBJECTS(REL_ID	INTEGER  GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL , DOC_ID	INTEGER NOT NULL, DL_ID	INTEGER NOT NULL, XML	VARCHAR(5000) NOT NULL,	PRIMARY KEY (REL_ID), CONSTRAINT FK_SBI_DIST_LIST_OBJECTS_1 FOREIGN KEY(DOC_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID), CONSTRAINT FK_SBI_DIST_LIST_OBJECTS_2 FOREIGN KEY(DL_ID) REFERENCES SBI_DIST_LIST(DL_ID))
CREATE MEMORY TABLE SBI_MEASURE_UNIT(id_measure_unit INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,name VARCHAR(20) default NULL,SCALE_TYPE_ID INTEGER NOT NULL,SCALE_CD VARCHAR(40) default NULL,SCALE_NM VARCHAR(400) default NULL,PRIMARY KEY  (id_measure_unit),CONSTRAINT SCALE_TYPE FOREIGN KEY (SCALE_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID) ON DELETE CASCADE) 
CREATE TABLE SBI_RESOURCES(RESOURCE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,RESOURCE_TYPE_ID INTEGER NOT NULL,TABLE_NAME VARCHAR(40) default NULL,COLUMN_NAME VARCHAR(40) default NULL,RESOURCE_NAME VARCHAR(40) NOT NULL,RESOURCE_DESCR VARCHAR(400) default NULL,PRIMARY KEY  (RESOURCE_ID),CONSTRAINT sbi_resources_ibfk_1 FOREIGN KEY (RESOURCE_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID)) 
CREATE TABLE SBI_THRESHOLD(THRESHOLD_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,THRESHOLD_TYPE_ID INTEGER NOT NULL,name VARCHAR(127) default NULL,description VARCHAR(255) default NULL,code VARCHAR(45) NOT NULL,PRIMARY KEY  (THRESHOLD_ID),CONSTRAINT sbi_threshold_ibfk_1 FOREIGN KEY (THRESHOLD_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID)) 
CREATE TABLE SBI_THRESHOLD_VALUE(id_threshold_value INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,THRESHOLD_ID INTEGER NOT NULL,SEVERITY_ID INTEGER default NULL,min_value DOUBLE default NULL,max_value DOUBLE default NULL,label VARCHAR(20) NOT NULL,colour VARCHAR(20) default NULL,position INTEGER default NULL,PRIMARY KEY  (id_threshold_value),CONSTRAINT sbi_threshold_value_ibfk_1 FOREIGN KEY (SEVERITY_ID) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_threshold_value_ibfk_2 FOREIGN KEY (THRESHOLD_ID) REFERENCES SBI_THRESHOLD (THRESHOLD_ID) ON DELETE CASCADE ON UPDATE NO ACTION) 
CREATE TABLE SBI_KPI_PERIODICITY(id_kpi_periodicity INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,name VARCHAR(400) NOT NULL,months INTEGER default NULL,days INTEGER default NULL,hours INTEGER default NULL,minutes INTEGER default NULL,chron_string VARCHAR(20) default NULL,start_date TIMESTAMP NOT NULL ,PRIMARY KEY (id_kpi_periodicity)) 
CREATE TABLE SBI_KPI(KPI_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,id_measure_unit INTEGER default NULL,DS_ID INTEGER default NULL,THRESHOLD_ID INTEGER default NULL,id_kpi_parent INTEGER default NULL,name VARCHAR(400) NOT NULL,document_label VARCHAR(40) default NULL,code VARCHAR(40) default NULL,metric VARCHAR(1000) default NULL,description VARCHAR(1000) default NULL,weight DOUBLE default NULL,flg_is_father CHAR  default NULL,kpi_type INTEGER default NULL,metric_scale_type INTEGER default NULL,measure_type INTEGER default NULL,interpretation VARCHAR(1000) default NULL,input_attributes VARCHAR(1000) default NULL,model_reference VARCHAR(255) default NULL,target_audience VARCHAR(1000) default NULL,PRIMARY KEY(KPI_ID),CONSTRAINT sbi_kpi_ibfk_1 FOREIGN KEY(DS_ID) REFERENCES SBI_DATA_SET(DS_ID),CONSTRAINT sbi_kpi_ibfk_2 FOREIGN KEY(id_kpi_parent) REFERENCES SBI_KPI (KPI_ID),CONSTRAINT sbi_kpi_ibfk_3 FOREIGN KEY(id_measure_unit) REFERENCES SBI_MEASURE_UNIT(id_measure_unit),CONSTRAINT sbi_kpi_ibfk_4 FOREIGN KEY(THRESHOLD_ID) REFERENCES SBI_THRESHOLD(THRESHOLD_ID) ON DELETE NO ACTION ON UPDATE NO ACTION,CONSTRAINT sbi_kpi_ibfk_5 FOREIGN KEY (kpi_type) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_kpi_ibfk_6 FOREIGN KEY (metric_scale_type) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_kpi_ibfk_7 FOREIGN KEY(measure_type) REFERENCES SBI_DOMAINS(VALUE_ID),) 
CREATE TABLE SBI_KPI_INSTANCE(id_kpi_instance INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_ID INTEGER NOT NULL,THRESHOLD_ID INTEGER NOT NULL,id_measure_unit INTEGER default NULL,weight DOUBLE default NULL,BEGIN_DT TIMESTAMP NOT NULL,CHART_TYPE_ID INTEGER default NULL,target DOUBLE default NULL,PRIMARY KEY  (id_kpi_instance),CONSTRAINT sbi_kpi_instance_3 FOREIGN KEY (CHART_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_kpi_instance_5 FOREIGN KEY (THRESHOLD_ID) REFERENCES SBI_THRESHOLD (THRESHOLD_ID),CONSTRAINT sbi_kpi_instance_ibfk_1 FOREIGN KEY (KPI_ID) REFERENCES SBI_KPI (KPI_ID),CONSTRAINT sbi_kpi_instance_ibfk_2 FOREIGN KEY (id_measure_unit) REFERENCES SBI_MEASURE_UNIT (id_measure_unit)) 
CREATE TABLE SBI_KPI_INST_PERIOD(KPI_INST_PERIOD_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_INSTANCE_ID INTEGER NOT NULL,PERIODICITY_ID INTEGER NOT NULL,DEFAULT_VALUE tinyint default NULL,PRIMARY KEY  (KPI_INST_PERIOD_ID),CONSTRAINT FK_SBI_KPI_INST_PERIOD_1 FOREIGN KEY (PERIODICITY_ID) REFERENCES SBI_KPI_PERIODICITY (id_kpi_periodicity),CONSTRAINT FK_SBI_KPI_INST_PERIOD_2 FOREIGN KEY (KPI_INSTANCE_ID) REFERENCES SBI_KPI_INSTANCE (id_kpi_instance)) 
CREATE TABLE SBI_KPI_INSTANCE_HISTORY(id_kpi_instance_history INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,id_measure_unit INTEGER default NULL,THRESHOLD_ID INTEGER NOT NULL,id_kpi_instance INTEGER NOT NULL,weight DOUBLE default NULL,BEGIN_DT TIMESTAMP NOT NULL,END_DT TIMESTAMP NOT NULL,CHART_TYPE_ID INTEGER NOT NULL,target DOUBLE default NULL,PRIMARY KEY  (id_kpi_instance_history),CONSTRAINT sbi_kpi_instance_history_4 FOREIGN KEY (CHART_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_kpi_instance_history_ibfk_1 FOREIGN KEY (id_measure_unit) REFERENCES SBI_MEASURE_UNIT (id_measure_unit),CONSTRAINT sbi_kpi_instance_history_ibfk_2 FOREIGN KEY (THRESHOLD_ID) REFERENCES SBI_THRESHOLD (THRESHOLD_ID),CONSTRAINT sbi_kpi_instance_history_ibfk_3 FOREIGN KEY (id_kpi_instance) REFERENCES SBI_KPI_INSTANCE (id_kpi_instance)) 
CREATE TABLE SBI_KPI_MODEL(KPI_MODEL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_ID INTEGER default NULL,KPI_MODEL_TYPE_ID INTEGER NOT NULL,KPI_PARENT_MODEL_ID INTEGER default NULL,KPI_MODEL_CD VARCHAR(40) NOT NULL,KPI_MODEL_NM VARCHAR(400) default NULL,KPI_MODEL_DESC VARCHAR(1000) default NULL,PRIMARY KEY  (KPI_MODEL_ID),CONSTRAINT sbi_kpi_model_ibfk_1 FOREIGN KEY (KPI_MODEL_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_kpi_model_ibfk_2 FOREIGN KEY (KPI_ID) REFERENCES SBI_KPI (KPI_ID),CONSTRAINT sbi_kpi_model_ibfk_3 FOREIGN KEY (KPI_PARENT_MODEL_ID) REFERENCES SBI_KPI_MODEL (KPI_MODEL_ID)) 
CREATE TABLE SBI_KPI_MODEL_ATTR(KPI_MODEL_ATTR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_MODEL_ATTR_TYPE_ID INTEGER NOT NULL,KPI_MODEL_ATTR_CD VARCHAR(40) default NULL,KPI_MODEL_ATTR_NM VARCHAR(400) default NULL,KPI_MODEL_ATTR_DESCR VARCHAR(1000) default NULL,PRIMARY KEY  (KPI_MODEL_ATTR_ID),CONSTRAINT sbi_kpi_model_attr_ibfk_1 FOREIGN KEY (KPI_MODEL_ATTR_TYPE_ID) REFERENCES SBI_DOMAINS (VALUE_ID)) 
CREATE TABLE SBI_KPI_MODEL_ATTR_VAL(KPI_MODEL_ATTR_VAL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_MODEL_ATTR_ID INTEGER NOT NULL,KPI_MODEL_ID INTEGER NOT NULL,VALUE VARCHAR(2048) default NULL,PRIMARY KEY  (KPI_MODEL_ATTR_VAL_ID),CONSTRAINT sbi_kpi_model_attr_val_ibfk_1 FOREIGN KEY (KPI_MODEL_ID) REFERENCES SBI_KPI_MODEL (KPI_MODEL_ID),CONSTRAINT sbi_kpi_model_attr_val_ibfk_2 FOREIGN KEY (KPI_MODEL_ATTR_ID) REFERENCES SBI_KPI_MODEL_ATTR (KPI_MODEL_ATTR_ID)) 
CREATE TABLE SBI_KPI_MODEL_INST(KPI_MODEL_INST INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_MODEL_INST_PARENT INTEGER default NULL,id_kpi_instance INTEGER default NULL,name VARCHAR(400) NOT NULL,description VARCHAR(1000) default NULL,label VARCHAR(100) NOT NULL,start_date TIMESTAMP default NULL,end_date TIMESTAMP default NULL,KPI_MODEL_ID INTEGER default NULL,PRIMARY KEY  (KPI_MODEL_INST),CONSTRAINT FK_sbi_kpi_model_inst_3 FOREIGN KEY (KPI_MODEL_ID) REFERENCES SBI_KPI_MODEL (KPI_MODEL_ID),CONSTRAINT sbi_kpi_model_inst_2 FOREIGN KEY (KPI_MODEL_INST_PARENT) REFERENCES SBI_KPI_MODEL_INST (KPI_MODEL_INST),CONSTRAINT sbi_kpi_model_inst_ibfk_1 FOREIGN KEY (id_kpi_instance) REFERENCES SBI_KPI_INSTANCE (id_kpi_instance)) 
CREATE TABLE SBI_KPI_MODEL_RESOURCES(KPI_MODEL_RESOURCES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,RESOURCE_ID INTEGER NOT NULL,KPI_MODEL_INST INTEGER NOT NULL,PRIMARY KEY  (KPI_MODEL_RESOURCES_ID),CONSTRAINT sbi_kpi_model_resources_ibfk_1 FOREIGN KEY (KPI_MODEL_INST) REFERENCES SBI_KPI_MODEL_INST (KPI_MODEL_INST),CONSTRAINT sbi_kpi_model_resources_ibfk_2 FOREIGN KEY (RESOURCE_ID) REFERENCES SBI_RESOURCES (RESOURCE_ID)) 
CREATE TABLE SBI_KPI_ROLE(id_kpi_role INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,KPI_ID INTEGER NOT NULL,EXT_ROLE_ID INTEGER NOT NULL,PRIMARY KEY  (id_kpi_role),CONSTRAINT sbi_kpi_role_ibfk_1 FOREIGN KEY (EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES (EXT_ROLE_ID),CONSTRAINT sbi_kpi_role_ibfk_2 FOREIGN KEY (KPI_ID) REFERENCES SBI_KPI (KPI_ID)) 
CREATE TABLE SBI_KPI_VALUE(id_kpi_instance_value INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,id_kpi_instance INTEGER NOT NULL,RESOURCE_ID INTEGER default NULL,VALUE VARCHAR(40) default NULL,BEGIN_DT TIMESTAMP default NULL,END_DT TIMESTAMP default NULL,DESCRIPTION VARCHAR(100) default NULL,XML_DATA VARCHAR, PRIMARY KEY  (id_kpi_instance_value),CONSTRAINT sbi_kpi_value_ibfk_1 FOREIGN KEY (id_kpi_instance) REFERENCES SBI_KPI_INSTANCE (id_kpi_instance),CONSTRAINT sbi_kpi_value_ibfk_2 FOREIGN KEY (RESOURCE_ID) REFERENCES SBI_RESOURCES (RESOURCE_ID)) 
CREATE TABLE SBI_ALARM(ALARM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,id_kpi_instance INTEGER NOT NULL,MODALITY_ID INTEGER NOT NULL ,DOCUMENT_ID INTEGER default NULL ,LABEL VARCHAR(50) NOT NULL,NAME VARCHAR(50) default NULL,DESCR VARCHAR(200) default NULL,TEXT VARCHAR(1000) NOT NULL ,URL VARCHAR(20) default NULL ,SINGLE_EVENT CHAR  default NULL ,AUTO_DISABLED CHAR  default NULL,id_threshold_value INTEGER NOT NULL,PRIMARY KEY  (ALARM_ID),CONSTRAINT sbi_alarm_ibfk_1 FOREIGN KEY (MODALITY_ID) REFERENCES SBI_DOMAINS (VALUE_ID),CONSTRAINT sbi_alarm_ibfk_2 FOREIGN KEY (DOCUMENT_ID) REFERENCES SBI_OBJECTS (BIOBJ_ID),CONSTRAINT sbi_alarm_ibfk_3 FOREIGN KEY (id_kpi_instance) REFERENCES SBI_KPI_INSTANCE (id_kpi_instance),CONSTRAINT sbi_alarm_ibfk_4 FOREIGN KEY (id_threshold_value) REFERENCES SBI_THRESHOLD_VALUE (id_threshold_value)) 
CREATE TABLE SBI_ALARM_CONTACT(ALARM_CONTACT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,NAME VARCHAR NOT NULL,EMAIL VARCHAR default NULL,MOBILE VARCHAR default NULL,RESOURCES VARCHAR default NULL,PRIMARY KEY  (ALARM_CONTACT_ID)) 
CREATE TABLE SBI_ALARM_DISTRIBUTION(ALARM_CONTACT_ID INTEGER NOT NULL,ALARM_ID INTEGER NOT NULL,PRIMARY KEY  (ALARM_CONTACT_ID,ALARM_ID),CONSTRAINT sbi_alarm_distribution_ibfk_1 FOREIGN KEY (ALARM_ID) REFERENCES SBI_ALARM (ALARM_ID),CONSTRAINT sbi_alarm_distribution_ibfk_2 FOREIGN KEY (ALARM_CONTACT_ID) REFERENCES SBI_ALARM_CONTACT (ALARM_CONTACT_ID)) 
CREATE TABLE SBI_ALARM_EVENT(ALARM_EVENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,ALARM_ID INTEGER NOT NULL,EVENT_TS TIMESTAMP default NULL ,ACTIVE CHAR default NULL ,KPI_VALUE VARCHAR(50) default NULL ,THRESHOLD_VALUE VARCHAR(50) default NULL,KPI_NAME VARCHAR(100) default NULL ,RESOURCES VARCHAR(200) default NULL,KPI_DESCRIPTION VARCHAR(100),RESOURCE_ID INTEGER,KPI_INSTANCE_ID INTEGER,PRIMARY KEY  (ALARM_EVENT_ID),CONSTRAINT sbi_alarm_event_ibfk_1 FOREIGN KEY (ALARM_ID) REFERENCES SBI_ALARM (ALARM_ID)) 
CREATE TABLE SBI_EXPORTERS(ENGINE_ID INTEGER NOT NULL,DOMAIN_ID INTEGER NOT NULL,DEFAULT_VALUE BOOLEAN,PRIMARY KEY  (ENGINE_ID, DOMAIN_ID),CONSTRAINT sbi_engine_ibfk_1 FOREIGN KEY (ENGINE_ID) REFERENCES SBI_ENGINES (ENGINE_ID),CONSTRAINT sbi_domains_ibfk_2 FOREIGN KEY (DOMAIN_ID) REFERENCES SBI_DOMAINS (VALUE_ID)) 
ALTER TABLE SBI_CHECKS ADD CONSTRAINT FK_SBI_CHECKS_1 FOREIGN KEY(VALUE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID)
ALTER TABLE SBI_ENGINES ADD CONSTRAINT FK_SBI_ENGINE_3 FOREIGN KEY(DEFAULT_DS_ID) REFERENCES SBI_DATA_SOURCE(DS_ID)
ALTER TABLE SBI_FUNC_ROLE ADD CONSTRAINT FK_SBI_FUNC_ROLE_3 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID)
ALTER TABLE SBI_OBJ_FUNC ADD CONSTRAINT FK_SBI_OBJ_FUNC_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_2 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID)
ALTER TABLE SBI_OBJ_STATE ADD CONSTRAINT FK_SBI_OBJ_STATE_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJECTS ADD CONSTRAINT FK_SBI_OBJECTS_6 FOREIGN KEY(DATA_SOURCE_ID) REFERENCES SBI_DATA_SOURCE(DS_ID)
ALTER TABLE SBI_CHECKS ALTER COLUMN CHECK_ID RESTART WITH 137
ALTER TABLE SBI_DOMAINS ALTER COLUMN VALUE_ID RESTART WITH 124
ALTER TABLE SBI_ENGINES ALTER COLUMN ENGINE_ID RESTART WITH 118
ALTER TABLE SBI_EXT_ROLES ALTER COLUMN EXT_ROLE_ID RESTART WITH 167
ALTER TABLE SBI_FUNCTIONS ALTER COLUMN FUNCT_ID RESTART WITH 153
ALTER TABLE SBI_LOV ALTER COLUMN LOV_ID RESTART WITH 214
ALTER TABLE SBI_OBJ_PAR ALTER COLUMN OBJ_PAR_ID RESTART WITH 312
ALTER TABLE SBI_OBJECTS ALTER COLUMN BIOBJ_ID RESTART WITH 226
ALTER TABLE SBI_PARAMETERS ALTER COLUMN PAR_ID RESTART WITH 205
ALTER TABLE SBI_PARUSE ALTER COLUMN USE_ID RESTART WITH 213
ALTER TABLE SBI_EVENTS ALTER COLUMN ID RESTART WITH 405
ALTER TABLE SBI_EVENTS_LOG ALTER COLUMN ID RESTART WITH 100
ALTER TABLE SBI_AUDIT ALTER COLUMN ID RESTART WITH 0
ALTER TABLE SBI_GEO_MAPS ALTER COLUMN MAP_ID RESTART WITH 1
ALTER TABLE SBI_GEO_FEATURES ALTER COLUMN FEATURE_ID RESTART WITH 1
ALTER TABLE SBI_VIEWPOINTS ALTER COLUMN VP_ID RESTART WITH 1
ALTER TABLE SBI_DATA_SOURCE ALTER COLUMN DS_ID RESTART WITH 100
ALTER TABLE SBI_BINARY_CONTENTS ALTER COLUMN BIN_ID RESTART WITH 1
ALTER TABLE SBI_OBJECT_TEMPLATES ALTER COLUMN OBJ_TEMP_ID RESTART WITH 1
ALTER TABLE SBI_OBJECT_NOTES ALTER COLUMN OBJ_NOTE_ID RESTART WITH 1
ALTER TABLE SBI_SUBOBJECTS ALTER COLUMN SUBOBJ_ID RESTART WITH 1
ALTER TABLE SBI_SNAPSHOTS ALTER COLUMN SNAP_ID RESTART WITH 1
ALTER TABLE SBI_USER_FUNC ALTER COLUMN USER_FUNCT_ID RESTART WITH 36
ALTER TABLE SBI_DOSSIER_PRES ALTER COLUMN PRESENTATION_ID RESTART WITH 1
ALTER TABLE SBI_DOSSIER_TEMP ALTER COLUMN PART_ID RESTART WITH 1
ALTER TABLE SBI_DOSSIER_BIN_TEMP ALTER COLUMN BIN_ID RESTART WITH 1
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 60
SET SCHEMA PUBLIC
INSERT INTO SBI_CHECKS VALUES(130,'Control if parameter is an Internet Address','CK-FIX-01','INTERNET ADDRESS',64,NULL,NULL,'Internet Address')
INSERT INTO SBI_CHECKS VALUES(131,'Control if  a parameter is Numeric','CK-FIX-02','NUMERIC',65,NULL,NULL,'Numeric')
INSERT INTO SBI_CHECKS VALUES(132,'Control if  a parameter is Alfanumeric','CK-FIX-03','ALFANUMERIC',66,NULL,NULL,'Alfanumeric')
INSERT INTO SBI_CHECKS VALUES(133,'Control if a parameter is a letter string','CK-FIX-04','LETTERSTRING',67,NULL,NULL,'Letter String')
INSERT INTO SBI_CHECKS VALUES(134,'Control if the parameter is present','CK-FIX-05','MANDATORY',68,NULL,NULL,'Mandatory')
INSERT INTO SBI_CHECKS VALUES(135,'Control if parameter is a Fiscal Code','CK-FIX-06','FISCALCODE',69,NULL,NULL,'Fiscal Code')
INSERT INTO SBI_CHECKS VALUES(136,'Control if parameter is a E-Mail','CK-FIX-07','EMAIL',70,NULL,NULL,'E-Mail')
INSERT INTO SBI_DOMAINS VALUES(36,'QUERY','Query statement','INPUT_TYPE','Input mode and values','Query statement to load list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(37,'JAVA_CLASS','Java class','INPUT_TYPE','Input mode and values','Java class to load list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(38,'SCRIPT','Script to load values','INPUT_TYPE','Input mode and values','Script to load values')
INSERT INTO SBI_DOMAINS VALUES(39,'FIX_LOV','Fixed list of values','INPUT_TYPE','Input mode and values','Predefined and hard coded list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(40,'REPORT','Report','BIOBJ_TYPE','BI Object types','Basic business intelligence objects type')
INSERT INTO SBI_DOMAINS VALUES(41,'OLAP','On-line analytical processing','BIOBJ_TYPE','BI Object types','Dimensional analysis of significant facts')
INSERT INTO SBI_DOMAINS VALUES(42,'DATA_MINING','Data mining model','BIOBJ_TYPE','BI Object types','Model to find out hidden information in data')
INSERT INTO SBI_DOMAINS VALUES(43,'DASH','Dashboard','BIOBJ_TYPE','BI Object types','Dashboard to monitor perfomance indicators')
INSERT INTO SBI_DOMAINS VALUES(44,'BOOL','Boolean','VALUE_TYPE','Input value types to check','Boolean input value type')
INSERT INTO SBI_DOMAINS VALUES(45,'SINGLE','Single value','VALUE_TYPE','Input value types to check','Only single value allowed')
INSERT INTO SBI_DOMAINS VALUES(46,'MULTI','Multivalue','VALUE_TYPE','Input value types to check','Many values are allowed')
INSERT INTO SBI_DOMAINS VALUES(47,'DATE','Date','PAR_TYPE','Parameter type','Parameter expects date values')
INSERT INTO SBI_DOMAINS VALUES(48,'NUM','Number','PAR_TYPE','Parameter type','Parameter expects numerical values')
INSERT INTO SBI_DOMAINS VALUES(49,'STRING','String','PAR_TYPE','Parameter type','Parameter expects textual values')
INSERT INTO SBI_DOMAINS VALUES(50,'USER','Functional role','ROLE_TYPE','User role type','Functional role for end users')
INSERT INTO SBI_DOMAINS VALUES(51,'ADMIN','Administrative role','ROLE_TYPE','User role type','Administrative role for developer users')
INSERT INTO SBI_DOMAINS VALUES(52,'SUSP','Suspended','STATE','Object state','Document temporanlly not in use')
INSERT INTO SBI_DOMAINS VALUES(54,'LOW_FUNCT','Low level functionality','FUNCT_TYPE','Functionality','BI Functionality joined to categories tree')
INSERT INTO SBI_DOMAINS VALUES(55,'DEV','Development','STATE','Object state','Document in development phase')
INSERT INTO SBI_DOMAINS VALUES(56,'TEST','Test','STATE','Object state','Document in testing phase')
INSERT INTO SBI_DOMAINS VALUES(57,'REL','Released','STATE','Object state','Document released for end users use')
INSERT INTO SBI_DOMAINS VALUES(58,'DATE','Date','CHECK','Check','Date')
INSERT INTO SBI_DOMAINS VALUES(59,'REGEXP','Regexp','CHECK','Check','Regular Expression ')
INSERT INTO SBI_DOMAINS VALUES(60,'MAXLENGTH','Max Length','CHECK','Check','Max Length')
INSERT INTO SBI_DOMAINS VALUES(61,'RANGE','Range','CHECK','Check','Range')
INSERT INTO SBI_DOMAINS VALUES(62,'DECIMALS','Decimal','CHECK','Check','Decimal')
INSERT INTO SBI_DOMAINS VALUES(63,'MINLENGTH','Min Length','CHECK','Check','Min Length')
INSERT INTO SBI_DOMAINS VALUES(64,'INTERNET ADDRESS','Internet Address','PRED_CHECK','Pred Check','Internet Address')
INSERT INTO SBI_DOMAINS VALUES(65,'NUMERIC','Numeric','PRED_CHECK','Pred Check','Numeric')
INSERT INTO SBI_DOMAINS VALUES(66,'ALFANUMERIC','Alfanumeric','PRED_CHECK','Pred Check','Alfanumeric')
INSERT INTO SBI_DOMAINS VALUES(67,'LETTERSTRING','Letter String','PRED_CHECK','Pred Check','Letter')
INSERT INTO SBI_DOMAINS VALUES(68,'MANDATORY','Mandatory','PRED_CHECK','Check','Mandatory')
INSERT INTO SBI_DOMAINS VALUES(69,'FISCALCODE','Fiscal Code','PRED_CHECK','Pred Check','Fiscal Code')
INSERT INTO SBI_DOMAINS VALUES(70,'EMAIL','E-Mail','PRED_CHECK','Pred Check','E-Mail')
INSERT INTO SBI_DOMAINS VALUES(103,'DATAMART','Datamart Model','BIOBJ_TYPE','BI Object types','Basic business intelligence objects type')
INSERT INTO SBI_DOMAINS VALUES(104,'EXT','External Engine','ENGINE_TYPE','Engine types','Business intelligence external engine of SpagoBI platform')
INSERT INTO SBI_DOMAINS VALUES(105,'INT','Internal Engine','ENGINE_TYPE','Engine types','Business intelligence internal engine of SpagoBI platform')
INSERT INTO SBI_DOMAINS VALUES(106,'MAP','Map','BIOBJ_TYPE','BI Object types','Map')
INSERT INTO SBI_DOMAINS VALUES(107,'DOSSIER','Dossier','BIOBJ_TYPE','BI Object types','Dossier')
INSERT INTO SBI_DOMAINS VALUES(108,'LIST','List values selection','SELECTION_TYPE','Selection modality of parameter values','Single-value selection from a list')
INSERT INTO SBI_DOMAINS VALUES(109,'CHECK_LIST','CheckList values selection','SELECTION_TYPE','Selection modality of parameter values','Multi-value selection from a checklist')
INSERT INTO SBI_DOMAINS VALUES(110,'COMBOBOX','ComboBox values selection','SELECTION_TYPE','Selection modality of parameter values','Single value selection from a combobox')
INSERT INTO SBI_DOMAINS VALUES(111,'OFFICE_DOC','Office document','BIOBJ_TYPE','BI Object types','Office document')
INSERT INTO SBI_DOMAINS VALUES(112,'ETL','ETL process','BIOBJ_TYPE','BI Object types','ETL process')
INSERT INTO SBI_DOMAINS VALUES(113,'USER_FUNCT','User functionality','FUNCT_TYPE','Functionality','BI Functionality joined to categories tree')
INSERT INTO SBI_DOMAINS VALUES(114,'DEV_ROLE','Developer Role','ROLE_TYPE','Developer role type','Predefined roles in BI portal')
INSERT INTO SBI_DOMAINS VALUES(115,'TEST_ROLE','Tester Role','ROLE_TYPE','Tester role type','Predefined roles in BI portal')
INSERT INTO SBI_DOMAINS VALUES(116,'DEFAULT','','DIALECT_HIB','','-1')
INSERT INTO SBI_DOMAINS VALUES(117,'ORACLE','Oracle  (any version)','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.OracleDialect')
INSERT INTO SBI_DOMAINS VALUES(118,'ORACLE 9i/10g','Oracle  (Oracle 9i/10g)','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.Oracle9Dialect')
INSERT INTO SBI_DOMAINS VALUES(119,'SQLSERVER','SQL Server ','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.SQLServerDialect')
INSERT INTO SBI_DOMAINS VALUES(120,'HQL','HQL ','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.HSQLDialect')
INSERT INTO SBI_DOMAINS VALUES(121,'MYSQL','MySql ','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.MySQLInnoDBDialect')
INSERT INTO SBI_DOMAINS VALUES(122,'POSTGRESQL','PostgreSQL ','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.PostgreSQLDialect')
INSERT INTO SBI_DOMAINS VALUES(123,'INGRES','Ingres ','DIALECT_HIB','Predefined hibernate dialect','org.hibernate.dialect.IngresDialect')
INSERT INTO SBI_DOMAINS VALUES(124,'DOCUMENT_COMPOSITE','Document Composite','BIOBJ_TYPE','BI Object types','Document Composite objects type')
INSERT INTO SBI_DOMAINS VALUES(125,'PIVOT_TRANS','Pivot Transformation','TRANSFORMATION_TYPE','Transformation types','Pivot Transformation Type')
INSERT INTO SBI_ENGINES VALUES(110,0,'Dashboard Internal Engine','Dashboard Internal Engine','','','','','','DashboardInternalEng',105,'it.eng.spagobi.engines.dashboard.SpagoBIDashboardInternalEngine',43,NULL)
INSERT INTO SBI_ENGINES VALUES(115,0,'Dossier Internal Engine','Dossier Internal Engine','','','','','','DossierInternalEng',105,'it.eng.spagobi.engines.dossier.engines.SpagoBIDossierInternalEngine',107,NULL)
INSERT INTO SBI_ENGINES VALUES(116,0,'Office Document Internal Engine','Office Document Internal Engine','','','','','','OfficeDocumentInternalEng',105,'it.eng.spagobi.engines.officeDocuments.SpagoBIOfficeDocumentInternalEngine',111,NULL)
INSERT INTO SBI_ENGINES VALUES(117,0,'Dashboard Composition Internal Engine','Dashboard Composition Internal Engine','','','','','','DashboardCompIE',105,'it.eng.spagobi.engines.dashboardscomposition.SpagoBIDashboardsCompositionInternalEngine',43,NULL)
INSERT INTO SBI_LOV VALUES(100,'Current month of the year format mm','CURRENT_MONTH_YEAR','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000areturnValue(monthStr);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current month of the year')
INSERT INTO SBI_LOV VALUES(101,'Current year format yyyy','CURRENT_YEAR','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString yearStr = year.toString();\u000d\u000areturnValue(yearStr);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current year')
INSERT INTO SBI_LOV VALUES(102,'Current month format mm/yyyy','CURRENT_MONTH','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current month')
INSERT INTO SBI_LOV VALUES(103,'Current date format dd/mm/yyyy','CURRENT_DATE','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint day = now.getDate();\u000d\u000aString dayStr = day.toString();\u000d\u000aif (day < 10) dayStr = ''0'' + dayStr;\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = dayStr + ''/'' + monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current date')
INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS')
INSERT INTO SBI_USER_FUNC VALUES(1,'EnginesManagement','EnginesManagement')
INSERT INTO SBI_USER_FUNC VALUES(2,'FunctionalitiesManagement','FunctionalitiesManagement')
INSERT INTO SBI_USER_FUNC VALUES(3,'LovsManagement','LovsManagement')
INSERT INTO SBI_USER_FUNC VALUES(4,'ConstraintManagement','ConstraintManagement')
INSERT INTO SBI_USER_FUNC VALUES(5,'ParameterManagement','ParameterManagement')
INSERT INTO SBI_USER_FUNC VALUES(6,'DocumentAdministration','DocumentAdministration')
INSERT INTO SBI_USER_FUNC VALUES(7,'DocumentDevManagement','DocumentDevManagement')
INSERT INTO SBI_USER_FUNC VALUES(8,'DocumentTestManagement','DocumentTestManagement')
INSERT INTO SBI_USER_FUNC VALUES(9,'DocumentAdminManagement','DocumentAdminManagement')
INSERT INTO SBI_USER_FUNC VALUES(10,'ImportExportManagement','ImportExportManagement')
INSERT INTO SBI_USER_FUNC VALUES(11,'SchedulerManagement','SchedulerManagement')
INSERT INTO SBI_USER_FUNC VALUES(12,'EventsManagement','EventsManagement')
INSERT INTO SBI_USER_FUNC VALUES(13,'WorkspaceManagement','WorkspaceManagement')
INSERT INTO SBI_USER_FUNC VALUES(14,'WorklistManagement','WorklistManagement')
INSERT INTO SBI_USER_FUNC VALUES(15,'MapCatalogueManagement','MapCatalogueManagement')
INSERT INTO SBI_USER_FUNC VALUES(16,'MapFeaturesManagement','MapFeaturesManagement')
INSERT INTO SBI_USER_FUNC VALUES(17,'DocumentManagement','DocumentManagement')
INSERT INTO SBI_USER_FUNC VALUES(18,'SyncronizeRolesManagement','SyncronizeRolesManagement')
INSERT INTO SBI_USER_FUNC VALUES(19,'ProfileAttributeManagement','ProfileAttributeManagement')
INSERT INTO SBI_USER_FUNC VALUES(20,'DataSourceManagement','DataSourceManagement')
INSERT INTO SBI_USER_FUNC VALUES(21,'DocumentUserManagement','DocumentUserManagement')
INSERT INTO SBI_USER_FUNC VALUES(22,'DocumentDeleteManagement','DocumentDeleteManagement')
INSERT INTO SBI_USER_FUNC VALUES(23,'DocumentStateManagement','DocumentStateManagement')
INSERT INTO SBI_USER_FUNC VALUES(24,'DocumentDetailManagement','DocumentDetailManagement')
INSERT INTO SBI_USER_FUNC VALUES(25,'DocumentMoveDownState','DocumentMoveDownState');
INSERT INTO SBI_USER_FUNC VALUES(26,'DocumentMoveUpState','DocumentMoveUpState');
INSERT INTO SBI_USER_FUNC VALUES(27,'ModifyRefresh','ModifyRefresh')
INSERT INTO SBI_USER_FUNC VALUES(28,'MenuManagement','MenuManagement')
INSERT INTO SBI_USER_FUNC VALUES(29,'ViewMyFolderAdmin','ViewMyFolderAdmin');
INSERT INTO SBI_USER_FUNC VALUES(30,'DistributionListUser','DistributionListUser');
INSERT INTO SBI_USER_FUNC VALUES(31,'DistributionListManagement','DistributionListManagement');
INSERT INTO SBI_USER_FUNC VALUES(32,'DocumentMetadataManagement','DocumentMetadataManagement');
INSERT INTO SBI_USER_FUNC VALUES(33,'LovsView','LovsView');
INSERT INTO SBI_USER_FUNC VALUES(34,'ConstraintView','ConstraintView');
INSERT INTO SBI_USER_FUNC VALUES(35,'ParameterView','ParameterView');
INSERT INTO SBI_USER_FUNC VALUES(36,'DatasetManagement','DatasetManagement');
INSERT INTO SBI_USER_FUNC VALUES(37, 'HotLinkManagement','HotLinkManagement');
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,1)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,2)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,3)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,4)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,5)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,6)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,7)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,8)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,9)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,10)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,11)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,13)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,15)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,16)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,17)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,18)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,19)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,20)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,21)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,22)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,23)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,24)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,3)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,4)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,5)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,7)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,12)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,13)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,14)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,15)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,16)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,17)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,19)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,22)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,24)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(115,8)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(115,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(50,21)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(50,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(115,25)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(115,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(115,37)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(114,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,25)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,26)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,27)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,28)
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES(51,37)
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('KPI','Kpi','BIOBJ_TYPE','BI Object types','Kpi business indicator')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('URGENT','Urgent','SEVERITY','Severity Level','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('HIGH','High','SEVERITY','Severity Level','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('MEDIUM','Medium','SEVERITY','Severity Level','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('LOW','Low','SEVERITY','Severity Level','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('RANGE','Range Values','THRESHOLD_TYPE','Threshold Type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('MINIMUM','Minimum Value','THRESHOLD_TYPE','Threshold Type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('MAXIMUM','Maximum Value','THRESHOLD_TYPE','Threshold Type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('CSP','CSP','RESOURCE','Resource type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('PROCESS','Process','RESOURCE','Resource type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('PROJECT','Project','RESOURCE','Resource type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('Meter','Meter','KPI_CHART','Kpi Chart type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('SimpleDial','SimpleDial','KPI_CHART','Kpi Chart type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('Speedometer','Speedometer','KPI_CHART','Kpi Chart type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('Thermometer','Thermometer','KPI_CHART','Kpi Chart type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('MAIL','Mail','ALARM_MODALITY','Alarm Modality',NULL)
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('SMS','SMS','ALARM_MODALITY','Alarm Modality',NULL)
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('GQM_ROOT','GQM root','MODEL_ROOT','Model root type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('GENERIC_ROOT','Generic root','MODEL_ROOT','Model root type','')
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('BulletGraph','BulletGraph','KPI_CHART','Kpi Chart type',NULL)
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('PERCENTAGE','Percentage','SCALE_TYPE','Scale type',NULL)
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (1,'month',1,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12')
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (2,'day',NULL,1,NULL,NULL,NULL,'2009-01-15 17:52:12')
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (3,'hour',NULL,NULL,1,NULL,NULL,'2009-01-15 17:52:12')
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (4,'minute',NULL,NULL,NULL,1,NULL,'2009-01-15 17:52:12')
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (5,'year',12,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12')
INSERT INTO SBI_KPI_PERIODICITY (id_kpi_periodicity,name,months,days,hours,minutes,chron_string,start_date) VALUES (6,'2 months',2,NULL,NULL,NULL,NULL,'2009-01-15 17:52:12')

