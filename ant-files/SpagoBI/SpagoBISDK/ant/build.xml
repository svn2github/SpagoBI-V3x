<project name="${project.name}" default="makeDist" basedir=".">
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--   DEFINIZIONE FILE DI PROPERTY						                                      -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --> 
  <property file="build.properties"/>	
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--   DEFINIZIONE CLASSPATH						                                            -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --> 
	<path id="web.classpath">
    		<pathelement path="${classpath}"/>
    		<!-- LIBRERIE SPECIFICHE APPLICATIVO  -->
    		<fileset dir="${web.lib}">
          		<include name="**/*.jar"/>
    		</fileset>
    		<!-- LIBRERIE ESTERNE DEL WEB CONTAINER necessarie per la compilazione -->
    		<!-- ma che non devono essere comprese nel war                         -->
    		<fileset dir="${runtime.lib}">
          		<include name="**/*.jar"/>
    		</fileset>
    		<!-- LIBRERIE DIPENDENZA SBI.UTILS necessarie per la compilazione      -->
    		<!-- che non devono essere comprese nel war                            -->
    		<fileset dir="${sbi.utils.lib}">
          		<include name="**/*.jar"/>
    		</fileset>  		
 	</path>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   PULIZIA AMBIENTE						                                                -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--> 
  <target name="clean" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}" />
    <delete dir="${dist}/${webapp_name}" />
  </target>	   	
  <target name="init" depends="clean">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/${webapp_name}/WEB-INF/classes"/>
  </target>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   SCARICO DEI SORGENTI AGGIORNATI DA CVS							                        -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <target name="svn.checkout" depends="init"
      description="Sincronizza l'applicazione con il repository">
     <exec dir="${project.dir}" executable="svn" >
      <arg line="checkout ${svn.base.location}/${project.name} ."/>
    </exec>	
   <exec dir="${project.dir}" executable="svn" output="${web.dir}/svn.properties">
    <arg value="info" />
   </exec>

  </target>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   AGGIORNAMENTO JAR SBI.UTILS							                                  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <target name="sbi.utils.update" 
      description="Updates sbi.utils library from distribution folder (THIS JAR MUST BE EXISTING)">
    <!-- deletes any previuos sbi.utils -->
    <delete>
      <fileset dir="${web.dir}/WEB-INF/lib" includes="**/sbi.utils*.jar"/>
    </delete>
    <!-- copies the newly created jar file -->
    <copy file="${sbiutils.dir}/dist/sbi.utils-${project.version}.jar" 
        todir="${web.dir}/WEB-INF/lib" overwrite="true" />
  </target>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   COMPILAZIONE							                                                  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <target name="compile" depends="sbi.utils.update" description="compile the source" >
    <!-- Compile the java code from ${src} into ${build}/${webapp_name}/WEB-INF/classes -->
    <javac srcdir="${src}" destdir="${build}/${webapp_name}/WEB-INF/classes" debug="on">
      <classpath refid="web.classpath"/>
    </javac> 
  </target>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   COPIA DELLE JSP,CSS,...                                                    -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->	  	  
  <target name="copy.artifacts" depends="compile">
    <copy todir="${build}/${webapp_name}">
      <fileset dir="${web.dir}">
        <exclude name="**/*.svn"/>
      </fileset>
    </copy>
    <copy todir="${build}/${webapp_name}/WEB-INF/classes" >
      <fileset dir="${src}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.svn"/>
      </fileset>
    </copy>
  	
   <copy file="${web.dir}/${license}" todir="${dist}" overwrite="true" /> 
  </target>
	
	
	<target name="create.war" depends="init,copy.artifacts" >
		<!--<antcall target="${specific.ant.task}" /> ????-->
	
	    <mkdir dir="${dist}"/>
	    <delete file="${dist}/${war_name}" />
	    <war warfile="${dist}/${war_name}" 
	         webxml="${build}/${webapp_name}/WEB-INF/web.xml" 
	         manifest="${build}/${webapp_name}/META-INF/MANIFEST.MF"	           
	         basedir="${build}/${webapp_name}" />
	</target>

  <target name="javadoc.sdk">    
    <javadoc packagenames="*"
      sourcepath="${src}"
      defaultexcludes="yes"
      destdir="${dist}/javadoc"
      author="true"
      version="true"
      use="true">
      <classpath refid="web.classpath"/>
    </javadoc>    
  </target>

  <target name="package.sdk" depends="create.war">    
  <zip destfile="${dist}/${project.name}-bin-${project.version}_${project.date}.zip"
       basedir="${dist}"
  />    
  </target>
  
  <target name="makeDist" >    
    <antcall target="create.war" />
  </target>


  <target name="create.sdk.src">
    <!-- checkout sdk's wsdl files -->
    <mkdir dir="${dist}/tmp_wsdl"/>
    <exec dir="${dist}/tmp_wsdl" executable="svn" >
      <arg line="checkout -N ${svn.base.location}/${wsdl.dir} ."/>
    </exec>	
    <copy file="${dist}/tmp_wsdl/sdkDataSets.wsdl" todir="${dist}" overwrite="true" />
    <copy file="${dist}/tmp_wsdl/sdkDocuments.wsdl" todir="${dist}" overwrite="true" />
    <copy file="${dist}/tmp_wsdl/sdkEngines.wsdl" todir="${dist}" overwrite="true" />
    <copy file="${dist}/tmp_wsdl/sdkTestConnection.wsdl" todir="${dist}" overwrite="true" />
    <delete dir="${dist}/tmp_wsdl" />
    
    <!-- copy wsdd files -->
    <copy file="${spagobi.service.client.dir}/src/client-config.wsdd" todir="${dist}" overwrite="true" />
    <copy file="${wsdd.dir}/server-config.wsdd" todir="${dist}" overwrite="true" />
    <!-- create zip file -->
    <zip destfile="${dist}/${project.name}-src-${project.version}_${project.date}.zip" excludes="**/*.svn">
        <zipfileset dir="../../../../SpagoBIUtils/src/it/eng/spagobi/sdk" prefix="${project.name}-src-${project.version}/src/it/eng/spagobi/sdk" />
        <zipfileset dir="../../../../SpagoBIProject/src/it/eng/spagobi/sdk" prefix="${project.name}-src-${project.version}/src/it/eng/spagobi/sdk" />
        <zipfileset dir="${tags.dir}" prefix="${project.name}-src-${project.version}/tags" />
        <zipfileset dir="${dist}" includes="**/*.wsdl" prefix="${project.name}-src-${project.version}/src" />
        <zipfileset dir="${dist}" includes="**/*.wsdd" prefix="${project.name}-src-${project.version}/src"/>
     </zip>
  </target>
  
</project>
