<project name="${project.name}" default="makeDist" basedir=".">
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE FILE DI PROPERTY						                                      -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<property file="build.properties" />


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE CLASSPATH						                                            -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<path id="web.classpath">
		<pathelement path="${classpath}" />
		<!-- LIBRERIE SPECIFICHE APPLICATIVO  -->
		<fileset dir="${web.lib}">
			<include name="**/*.jar" />
		</fileset>
		<!-- LIBRERIE ESTERNE DEL WEB CONTAINER necessarie per la compilazione -->
		<!-- ma che non devono essere comprese nel war                         -->
		<fileset dir="${runtime.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   PULIZIA AMBIENTE						                                                -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}/${webapp_name}" />
	</target>
	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${build}/${webapp_name}/WEB-INF/classes" />
	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   SCARICO DEI SORGENTI AGGIORNATI DA SVN							                        -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="svn.checkout" depends="init" description="Sincronizza l'applicazione con il repository">
		<exec dir="${project.dir}" executable="svn">
			<arg line="checkout ${svn.base.location}/${project.name} ." />
		</exec>
		<exec dir="${project.dir}" executable="svn" output="${web.dir}/svn.properties">
			<arg value="info" />
		</exec>

	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   AGGIORNAMENTO JAR SBI.UTILS							                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="sbi.utils.update" description="Updates sbi.utils library from distribution folder (THIS JAR MUST BE EXISTING)">
		<!-- deletes any previuos sbi.utils -->
		<delete>
			<fileset dir="${web.dir}/WEB-INF/lib" includes="**/sbi.utils*.jar" />
		</delete>
		<!-- copies the newly created jar file -->
		<copy file="${sbiutils.dir}/dist/sbi.utils-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />
	</target>

	
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COPY GWT FILES                                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	 <target name="check">
	  <condition property="replace.gwt">
		<available file="${build}/${webapp_name}/com.tensegrity.wpalo.SpagoBIJPaloEngine" type="dir"/>
	  </condition>
	 </target>
	 <target name="replace.gwt" depends="check" if="replace.gwt" >
			<delete>
			   <fileset dir="${build}/${webapp_name}/com.tensegrity.wpalo.SpagoBIJPaloEngine">
			      <include name="*"/>
			   </fileset>
			</delete>

		  <copy todir="${build}/${webapp_name}/com.tensegrity.wpalo.SpagoBIJPaloEngine">
		    <fileset dir="${gwt.dir}/com.tensegrity.wpalo.SpagoBIJPaloEngine">
			      <include name="**/*"/>
			</fileset>
		  </copy>

	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COMPILAZIONE							                                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="compile" depends="sbi.utils.update, replace.gwt" description="compile the source">
		<!-- Compile the java code from ${src} into ${build}/${webapp_name}/WEB-INF/classes -->
		<javac srcdir="${src}" destdir="${build}/${webapp_name}/WEB-INF/classes" debug="on">
			<classpath refid="web.classpath" />
		</javac>
	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COPIA DELLE JSP,CSS,...                                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="copy.artifacts" depends="compile">
		<copy todir="${build}/${webapp_name}">
			<fileset dir="${web.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		<copy todir="${build}/${webapp_name}/WEB-INF/classes">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		<copy file="${web.dir}/${license}" todir="${dist}" overwrite="true" />
	</target>


	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   CREAZIONE JAR							                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

	<!--target name="jar" depends="copy.artifacts"  description="Generates executable jar file">
		<jar destfile="${build}/${webapp_name}/WEB-INF/lib/spagobi.jpalo-${project.version}.jar"  >
		<fileset dir="${build}/${webapp_name}/WEB-INF/classes">
			<include name="com/**/*" />
		</fileset>
		</jar>
		<delete dir="${build}/${webapp_name}/WEB-INF/classes/com"/>
	</target-->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   ATTIVITA' SPECIFICHE PER APPLICATION SERVER                                  -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="tomcat">

	</target>

	<target name="jboss6">
	</target>


	<target name="liferay.jboss">
		<delete file="${build}/${webapp_name}/WEB-INF/lib/dom4j-1.6.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/xercesImpl-2.6.2.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/xml-apis-2.0.2.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/portlet-api-1.0.jar" />

	</target>

	<target name="liferay.tomcat">
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   ATTIVITA' SPECIFICHE PER LA GESTIONE DEL SSI                          -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="sso.cas">

		<replace file="${build}/${webapp_name}/WEB-INF/web.xml">
			<replacetoken><![CDATA[<!-- START-CAS]]></replacetoken>
			<replacevalue><![CDATA[<!-- START-CAS -->]]></replacevalue>
		</replace>
		<replace file="${build}/${webapp_name}/WEB-INF/web.xml">
			<replacetoken><![CDATA[END-CAS -->]]></replacetoken>
			<replacevalue><![CDATA[<!-- END-CAS -->]]></replacevalue>
		</replace>

	</target>

	<target name="sso.no_sso">
	</target>
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   AGGIORNAMENTO DELLA VERSIONE NEL MANIFEST                                                                -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="upgrade.mf">
		<replaceregexp file="${build}/${webapp_name}/META-INF/MANIFEST.MF">
			<regexp pattern="(Implementation-Version:)(.*?$)" />
			<substitution expression="(^)Implementation-Version: ${project.version}($)" />
		</replaceregexp>
	</target>

	<target name="jpalo_ssl.no_ssl">
		<replace file="${build}/${webapp_name}/WEB-INF/classes/deploy_it.properties">
			<replacetoken>is.ssl=true</replacetoken>
			<replacevalue>is.ssl=false</replacevalue>
		</replace>
	</target>
	<target name="jpalo_ssl.ssl">
		<replace file="${build}/${webapp_name}/WEB-INF/classes/deploy_it.properties">
			<replacetoken>is.ssl=false</replacetoken>
			<replacevalue>is.ssl=true</replacevalue>
		</replace>
	</target>
	<target name="hsql">
		<replace file="${build}/${webapp_name}/WEB-INF/classes/deploy_it.properties">
			<replacetoken>use.mysql=true</replacetoken>
			<replacevalue>use.mysql=false</replacevalue>
		</replace>

	</target>
	<target name="mysql">
		<replace file="${build}/${webapp_name}/WEB-INF/classes/deploy_it.properties">
			<replacetoken>use.mysql=false</replacetoken>
			<replacevalue>use.mysql=true</replacevalue>
		</replace>
	</target>
	<target name="url">
		<propertyfile file="${build}/${webapp_name}/WEB-INF/classes/deploy_it.properties">
			<entry key="jpalo.mondrian.connection.url" value="${jpalo.mondrian.url}" />
		</propertyfile>
	</target>
	<!-- database properties: changes -->
	<target name="change_db">
		<propertyfile file="${build}/${webapp_name}/WEB-INF/classes/sql/${jpalo_db}/credentials">
			<entry key="jdbcDriver" value="${jpalo_db.driver}" />
			<entry key="jdbcURL" value="${jpalo_db.url}" />
			<entry key="jdbcPort" value="${jpalo_db.port}" />
			<entry key="userName" value="${jpalo_db.user}" />
			<entry key="userPassword" value="${jpalo_db.password}" />
			<entry key="databaseName" value="${jpalo_db.name}" />
		</propertyfile>
	</target>
	<target name="create.war" depends="init,copy.artifacts">
		<antcall target="${sso}" />
		<antcall target="${specific.ant.task}" />
		<antcall target="${jpalo_ssl}" />
		<antcall target="${jpalo_db}" />
		<antcall target="change_db" />
		<antcall target="url" />
		<antcall target="upgrade.mf" />

		<mkdir dir="${dist}" />
		<delete file="${dist}/${war_name}" />
		<war warfile="${dist}/${war_name}" webxml="${build}/${webapp_name}/WEB-INF/web.xml" manifest="${build}/${webapp_name}/META-INF/MANIFEST.MF" basedir="${build}/${webapp_name}" />
	</target>

	<target name="javadoc">
		<javadoc packagenames="*" sourcepath="${src}" defaultexcludes="yes" destdir="${dist}/javadoc" author="true" version="true" use="true">
			<classpath refid="web.classpath" />
		</javadoc>
	</target>

	<target name="package">
		<zip destfile="../../../../dist/${project.name}-bin-${project.version}_${project.date}.zip" basedir="${dist}" />
	</target>

	<target name="makeDist">
		<antcall target="create.war" />
	</target>

</project>
